/* tslint:disable */
/* eslint-disable */
/**
 * Juicer schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiText } from './UiText';
import {
    UiTextFromJSON,
    UiTextFromJSONTyped,
    UiTextToJSON,
    UiTextToJSONTyped,
} from './UiText';

/**
 * This might include a label and other information that can optionally
 * be used to render UIs.
 * @export
 * @interface UiNodeMeta
 */
export interface UiNodeMeta {
    /**
     * 
     * @type {UiText}
     * @memberof UiNodeMeta
     */
    label?: UiText;
}

/**
 * Check if a given object implements the UiNodeMeta interface.
 */
export function instanceOfUiNodeMeta(value: object): value is UiNodeMeta {
    return true;
}

export function UiNodeMetaFromJSON(json: any): UiNodeMeta {
    return UiNodeMetaFromJSONTyped(json, false);
}

export function UiNodeMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiNodeMeta {
    if (json == null) {
        return json;
    }
    return {
        
        'label': json['label'] == null ? undefined : UiTextFromJSON(json['label']),
    };
}

export function UiNodeMetaToJSON(json: any): UiNodeMeta {
    return UiNodeMetaToJSONTyped(json, false);
}

export function UiNodeMetaToJSONTyped(value?: UiNodeMeta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'label': UiTextToJSON(value['label']),
    };
}

