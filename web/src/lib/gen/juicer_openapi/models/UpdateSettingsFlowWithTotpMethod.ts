/* tslint:disable */
/* eslint-disable */
/**
 * Juicer schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Update Settings Flow with TOTP Method
 * @export
 * @interface UpdateSettingsFlowWithTotpMethod
 */
export interface UpdateSettingsFlowWithTotpMethod {
    /**
     * CSRFToken is the anti-CSRF token
     * @type {string}
     * @memberof UpdateSettingsFlowWithTotpMethod
     */
    csrfToken?: string;
    /**
     * Method
     * 
     * Should be set to "totp" when trying to add, update, or remove a totp pairing.
     * @type {string}
     * @memberof UpdateSettingsFlowWithTotpMethod
     */
    method: string;
    /**
     * ValidationTOTP must contain a valid TOTP based on the
     * @type {string}
     * @memberof UpdateSettingsFlowWithTotpMethod
     */
    totpCode?: string;
    /**
     * UnlinkTOTP if true will remove the TOTP pairing,
     * effectively removing the credential. This can be used
     * to set up a new TOTP device.
     * @type {boolean}
     * @memberof UpdateSettingsFlowWithTotpMethod
     */
    totpUnlink?: boolean;
    /**
     * Transient data to pass along to any webhooks
     * @type {object}
     * @memberof UpdateSettingsFlowWithTotpMethod
     */
    transientPayload?: object;
}

/**
 * Check if a given object implements the UpdateSettingsFlowWithTotpMethod interface.
 */
export function instanceOfUpdateSettingsFlowWithTotpMethod(value: object): value is UpdateSettingsFlowWithTotpMethod {
    if (!('method' in value) || value['method'] === undefined) return false;
    return true;
}

export function UpdateSettingsFlowWithTotpMethodFromJSON(json: any): UpdateSettingsFlowWithTotpMethod {
    return UpdateSettingsFlowWithTotpMethodFromJSONTyped(json, false);
}

export function UpdateSettingsFlowWithTotpMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateSettingsFlowWithTotpMethod {
    if (json == null) {
        return json;
    }
    return {
        
        'csrfToken': json['csrf_token'] == null ? undefined : json['csrf_token'],
        'method': json['method'],
        'totpCode': json['totp_code'] == null ? undefined : json['totp_code'],
        'totpUnlink': json['totp_unlink'] == null ? undefined : json['totp_unlink'],
        'transientPayload': json['transient_payload'] == null ? undefined : json['transient_payload'],
    };
}

export function UpdateSettingsFlowWithTotpMethodToJSON(json: any): UpdateSettingsFlowWithTotpMethod {
    return UpdateSettingsFlowWithTotpMethodToJSONTyped(json, false);
}

export function UpdateSettingsFlowWithTotpMethodToJSONTyped(value?: UpdateSettingsFlowWithTotpMethod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'csrf_token': value['csrfToken'],
        'method': value['method'],
        'totp_code': value['totpCode'],
        'totp_unlink': value['totpUnlink'],
        'transient_payload': value['transientPayload'],
    };
}

