/* tslint:disable */
/* eslint-disable */
/**
 * Juicer schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubjectSet } from './SubjectSet';
import {
    SubjectSetFromJSON,
    SubjectSetFromJSONTyped,
    SubjectSetToJSON,
    SubjectSetToJSONTyped,
} from './SubjectSet';

/**
 * Check Permission using Post Request Body
 * @export
 * @interface PostCheckPermissionBody
 */
export interface PostCheckPermissionBody {
    /**
     * Namespace to query
     * @type {string}
     * @memberof PostCheckPermissionBody
     */
    namespace?: string;
    /**
     * Object to query
     * @type {string}
     * @memberof PostCheckPermissionBody
     */
    object?: string;
    /**
     * Relation to query
     * @type {string}
     * @memberof PostCheckPermissionBody
     */
    relation?: string;
    /**
     * SubjectID to query
     * 
     * Either SubjectSet or SubjectID can be provided.
     * @type {string}
     * @memberof PostCheckPermissionBody
     */
    subjectId?: string;
    /**
     * 
     * @type {SubjectSet}
     * @memberof PostCheckPermissionBody
     */
    subjectSet?: SubjectSet;
}

/**
 * Check if a given object implements the PostCheckPermissionBody interface.
 */
export function instanceOfPostCheckPermissionBody(value: object): value is PostCheckPermissionBody {
    return true;
}

export function PostCheckPermissionBodyFromJSON(json: any): PostCheckPermissionBody {
    return PostCheckPermissionBodyFromJSONTyped(json, false);
}

export function PostCheckPermissionBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostCheckPermissionBody {
    if (json == null) {
        return json;
    }
    return {
        
        'namespace': json['namespace'] == null ? undefined : json['namespace'],
        'object': json['object'] == null ? undefined : json['object'],
        'relation': json['relation'] == null ? undefined : json['relation'],
        'subjectId': json['subject_id'] == null ? undefined : json['subject_id'],
        'subjectSet': json['subject_set'] == null ? undefined : SubjectSetFromJSON(json['subject_set']),
    };
}

export function PostCheckPermissionBodyToJSON(json: any): PostCheckPermissionBody {
    return PostCheckPermissionBodyToJSONTyped(json, false);
}

export function PostCheckPermissionBodyToJSONTyped(value?: PostCheckPermissionBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'namespace': value['namespace'],
        'object': value['object'],
        'relation': value['relation'],
        'subject_id': value['subjectId'],
        'subject_set': SubjectSetToJSON(value['subjectSet']),
    };
}

