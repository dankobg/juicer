/* tslint:disable */
/* eslint-disable */
/**
 * Juicer schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Indicates, that the UI flow could be continued by showing a recovery ui
 * @export
 * @interface ContinueWithRedirectBrowserTo
 */
export interface ContinueWithRedirectBrowserTo {
    /**
     * Action will always be `redirect_browser_to`
     * redirect_browser_to ContinueWithActionRedirectBrowserToString
     * @type {string}
     * @memberof ContinueWithRedirectBrowserTo
     */
    action: ContinueWithRedirectBrowserToActionEnum;
    /**
     * The URL to redirect the browser to
     * @type {string}
     * @memberof ContinueWithRedirectBrowserTo
     */
    redirectBrowserTo: string;
}


/**
 * @export
 */
export const ContinueWithRedirectBrowserToActionEnum = {
    RedirectBrowserTo: 'redirect_browser_to'
} as const;
export type ContinueWithRedirectBrowserToActionEnum = typeof ContinueWithRedirectBrowserToActionEnum[keyof typeof ContinueWithRedirectBrowserToActionEnum];


/**
 * Check if a given object implements the ContinueWithRedirectBrowserTo interface.
 */
export function instanceOfContinueWithRedirectBrowserTo(value: object): value is ContinueWithRedirectBrowserTo {
    if (!('action' in value) || value['action'] === undefined) return false;
    if (!('redirectBrowserTo' in value) || value['redirectBrowserTo'] === undefined) return false;
    return true;
}

export function ContinueWithRedirectBrowserToFromJSON(json: any): ContinueWithRedirectBrowserTo {
    return ContinueWithRedirectBrowserToFromJSONTyped(json, false);
}

export function ContinueWithRedirectBrowserToFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContinueWithRedirectBrowserTo {
    if (json == null) {
        return json;
    }
    return {
        
        'action': json['action'],
        'redirectBrowserTo': json['redirect_browser_to'],
    };
}

export function ContinueWithRedirectBrowserToToJSON(json: any): ContinueWithRedirectBrowserTo {
    return ContinueWithRedirectBrowserToToJSONTyped(json, false);
}

export function ContinueWithRedirectBrowserToToJSONTyped(value?: ContinueWithRedirectBrowserTo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'action': value['action'],
        'redirect_browser_to': value['redirectBrowserTo'],
    };
}

