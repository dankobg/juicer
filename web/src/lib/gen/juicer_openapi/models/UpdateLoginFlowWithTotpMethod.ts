/* tslint:disable */
/* eslint-disable */
/**
 * Juicer schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Update Login Flow with TOTP Method
 * @export
 * @interface UpdateLoginFlowWithTotpMethod
 */
export interface UpdateLoginFlowWithTotpMethod {
    /**
     * Sending the anti-csrf token is only required for browser login flows.
     * @type {string}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    csrfToken?: string;
    /**
     * Method should be set to "totp" when logging in using the TOTP strategy.
     * @type {string}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    method: string;
    /**
     * The TOTP code.
     * @type {string}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    totpCode: string;
    /**
     * Transient data to pass along to any webhooks
     * @type {object}
     * @memberof UpdateLoginFlowWithTotpMethod
     */
    transientPayload?: object;
}

/**
 * Check if a given object implements the UpdateLoginFlowWithTotpMethod interface.
 */
export function instanceOfUpdateLoginFlowWithTotpMethod(value: object): value is UpdateLoginFlowWithTotpMethod {
    if (!('method' in value) || value['method'] === undefined) return false;
    if (!('totpCode' in value) || value['totpCode'] === undefined) return false;
    return true;
}

export function UpdateLoginFlowWithTotpMethodFromJSON(json: any): UpdateLoginFlowWithTotpMethod {
    return UpdateLoginFlowWithTotpMethodFromJSONTyped(json, false);
}

export function UpdateLoginFlowWithTotpMethodFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateLoginFlowWithTotpMethod {
    if (json == null) {
        return json;
    }
    return {
        
        'csrfToken': json['csrf_token'] == null ? undefined : json['csrf_token'],
        'method': json['method'],
        'totpCode': json['totp_code'],
        'transientPayload': json['transient_payload'] == null ? undefined : json['transient_payload'],
    };
}

export function UpdateLoginFlowWithTotpMethodToJSON(json: any): UpdateLoginFlowWithTotpMethod {
    return UpdateLoginFlowWithTotpMethodToJSONTyped(json, false);
}

export function UpdateLoginFlowWithTotpMethodToJSONTyped(value?: UpdateLoginFlowWithTotpMethod | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'csrf_token': value['csrfToken'],
        'method': value['method'],
        'totp_code': value['totpCode'],
        'transient_payload': value['transientPayload'],
    };
}

