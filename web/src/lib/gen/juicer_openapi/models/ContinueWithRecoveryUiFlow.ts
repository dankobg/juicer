/* tslint:disable */
/* eslint-disable */
/**
 * Juicer schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContinueWithRecoveryUiFlow
 */
export interface ContinueWithRecoveryUiFlow {
    /**
     * The ID of the recovery flow
     * @type {string}
     * @memberof ContinueWithRecoveryUiFlow
     */
    id: string;
    /**
     * The URL of the recovery flow
     * 
     * If this value is set, redirect the user's browser to this URL. This value is typically unset for native clients / API flows.
     * @type {string}
     * @memberof ContinueWithRecoveryUiFlow
     */
    url?: string;
}

/**
 * Check if a given object implements the ContinueWithRecoveryUiFlow interface.
 */
export function instanceOfContinueWithRecoveryUiFlow(value: object): value is ContinueWithRecoveryUiFlow {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function ContinueWithRecoveryUiFlowFromJSON(json: any): ContinueWithRecoveryUiFlow {
    return ContinueWithRecoveryUiFlowFromJSONTyped(json, false);
}

export function ContinueWithRecoveryUiFlowFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContinueWithRecoveryUiFlow {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

export function ContinueWithRecoveryUiFlowToJSON(json: any): ContinueWithRecoveryUiFlow {
    return ContinueWithRecoveryUiFlowToJSONTyped(json, false);
}

export function ContinueWithRecoveryUiFlowToJSONTyped(value?: ContinueWithRecoveryUiFlow | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'url': value['url'],
    };
}

