/* tslint:disable */
/* eslint-disable */
/**
 * Juicer schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaxLineItem } from './TaxLineItem';
import {
    TaxLineItemFromJSON,
    TaxLineItemFromJSONTyped,
    TaxLineItemToJSON,
    TaxLineItemToJSONTyped,
} from './TaxLineItem';
import type { TimeInterval } from './TimeInterval';
import {
    TimeIntervalFromJSON,
    TimeIntervalFromJSONTyped,
    TimeIntervalToJSON,
    TimeIntervalToJSONTyped,
} from './TimeInterval';
import type { LineItemV1 } from './LineItemV1';
import {
    LineItemV1FromJSON,
    LineItemV1FromJSONTyped,
    LineItemV1ToJSON,
    LineItemV1ToJSONTyped,
} from './LineItemV1';

/**
 * 
 * @export
 * @interface InvoiceDataV1
 */
export interface InvoiceDataV1 {
    /**
     * 
     * @type {TimeInterval}
     * @memberof InvoiceDataV1
     */
    billingPeriod: TimeInterval;
    /**
     * The currency of the invoice.
     * @type {string}
     * @memberof InvoiceDataV1
     */
    readonly currency: string;
    /**
     * Deleted is true if the invoice has been soft-deleted.
     * @type {boolean}
     * @memberof InvoiceDataV1
     */
    readonly deleted?: boolean;
    /**
     * The items that are part of this invoice.
     * @type {Array<LineItemV1>}
     * @memberof InvoiceDataV1
     */
    readonly items: Array<LineItemV1>;
    /**
     * The plan that this invoice is based on, in the format "Name@version".
     * @type {string}
     * @memberof InvoiceDataV1
     */
    readonly plan?: string;
    /**
     * 
     * @type {string}
     * @memberof InvoiceDataV1
     */
    stripeInvoiceItem?: string;
    /**
     * The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
     * @type {string}
     * @memberof InvoiceDataV1
     */
    stripeInvoiceStatus?: string;
    /**
     * An optional link to the invoice on Stripe.
     * @type {string}
     * @memberof InvoiceDataV1
     */
    readonly stripeLink?: string;
    /**
     * The subtitle of the invoice.
     * @type {string}
     * @memberof InvoiceDataV1
     */
    readonly subtitle?: string;
    /**
     * 
     * @type {TaxLineItem}
     * @memberof InvoiceDataV1
     */
    tax?: TaxLineItem;
    /**
     * The title of the invoice.
     * @type {string}
     * @memberof InvoiceDataV1
     */
    readonly title: string;
    /**
     * 
     * @type {number}
     * @memberof InvoiceDataV1
     */
    totalInCent: number;
}

/**
 * Check if a given object implements the InvoiceDataV1 interface.
 */
export function instanceOfInvoiceDataV1(value: object): value is InvoiceDataV1 {
    if (!('billingPeriod' in value) || value['billingPeriod'] === undefined) return false;
    if (!('currency' in value) || value['currency'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('totalInCent' in value) || value['totalInCent'] === undefined) return false;
    return true;
}

export function InvoiceDataV1FromJSON(json: any): InvoiceDataV1 {
    return InvoiceDataV1FromJSONTyped(json, false);
}

export function InvoiceDataV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): InvoiceDataV1 {
    if (json == null) {
        return json;
    }
    return {
        
        'billingPeriod': TimeIntervalFromJSON(json['billing_period']),
        'currency': json['currency'],
        'deleted': json['deleted'] == null ? undefined : json['deleted'],
        'items': ((json['items'] as Array<any>).map(LineItemV1FromJSON)),
        'plan': json['plan'] == null ? undefined : json['plan'],
        'stripeInvoiceItem': json['stripe_invoice_item'] == null ? undefined : json['stripe_invoice_item'],
        'stripeInvoiceStatus': json['stripe_invoice_status'] == null ? undefined : json['stripe_invoice_status'],
        'stripeLink': json['stripe_link'] == null ? undefined : json['stripe_link'],
        'subtitle': json['subtitle'] == null ? undefined : json['subtitle'],
        'tax': json['tax'] == null ? undefined : TaxLineItemFromJSON(json['tax']),
        'title': json['title'],
        'totalInCent': json['total_in_cent'],
    };
}

export function InvoiceDataV1ToJSON(json: any): InvoiceDataV1 {
    return InvoiceDataV1ToJSONTyped(json, false);
}

export function InvoiceDataV1ToJSONTyped(value?: Omit<InvoiceDataV1, 'currency'|'deleted'|'items'|'plan'|'stripe_link'|'subtitle'|'title'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'billing_period': TimeIntervalToJSON(value['billingPeriod']),
        'stripe_invoice_item': value['stripeInvoiceItem'],
        'stripe_invoice_status': value['stripeInvoiceStatus'],
        'tax': TaxLineItemToJSON(value['tax']),
        'total_in_cent': value['totalInCent'],
    };
}

