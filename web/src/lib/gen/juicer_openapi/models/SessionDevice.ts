/* tslint:disable */
/* eslint-disable */
/**
 * Juicer schema
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Device corresponding to a Session
 * @export
 * @interface SessionDevice
 */
export interface SessionDevice {
    /**
     * Device record ID
     * @type {string}
     * @memberof SessionDevice
     */
    id: string;
    /**
     * IPAddress of the client
     * @type {string}
     * @memberof SessionDevice
     */
    ipAddress?: string;
    /**
     * Geo Location corresponding to the IP Address
     * @type {string}
     * @memberof SessionDevice
     */
    location?: string;
    /**
     * UserAgent of the client
     * @type {string}
     * @memberof SessionDevice
     */
    userAgent?: string;
}

/**
 * Check if a given object implements the SessionDevice interface.
 */
export function instanceOfSessionDevice(value: object): value is SessionDevice {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function SessionDeviceFromJSON(json: any): SessionDevice {
    return SessionDeviceFromJSONTyped(json, false);
}

export function SessionDeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionDevice {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'ipAddress': json['ip_address'] == null ? undefined : json['ip_address'],
        'location': json['location'] == null ? undefined : json['location'],
        'userAgent': json['user_agent'] == null ? undefined : json['user_agent'],
    };
}

export function SessionDeviceToJSON(json: any): SessionDevice {
    return SessionDeviceToJSONTyped(json, false);
}

export function SessionDeviceToJSONTyped(value?: SessionDevice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'ip_address': value['ipAddress'],
        'location': value['location'],
        'user_agent': value['userAgent'],
    };
}

