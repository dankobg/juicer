openapi: 3.0.2
servers:
  - url: "http://localhost:1337/api/v1"
info:
  version: 1.0.0
  title: Juicer schema
tags:
  - name: juicer
    description: Everything about juicer
paths:
  /health/alive:
    get:
      tags:
        - juicer
      summary: Check if server is healthy
      description: Checks if the server is healthy
      operationId: getHealthAlive
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Healthy"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /health/ready:
    get:
      tags:
        - juicer
      summary: Check if server is ready
      description: Checks if the server is ready
      operationId: getHealthReady
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ready"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /juicer/game-variants:
    get:
      tags:
        - juicer
      summary: Return game variants
      description: Return game variants
      operationId: listGameVariants
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GameVariant"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /juicer/game-time-categories:
    get:
      tags:
        - juicer
      summary: Return game time categories
      description: Return game time categories
      operationId: listGameTimeCategories
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GameTimeCategory"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /juicer/game-time-kinds:
    get:
      tags:
        - juicer
      summary: Return game time kinds
      description: Return game time kinds
      operationId: listGameTimeKinds
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GameTimeKind"
        default:
          $ref: "#/components/responses/UnexpectedError"
  /juicer/quick-games:
    get:
      tags:
        - juicer
      summary: Return quick games
      description: Return quick games
      operationId: listQuickGames
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/QuickGame"
  "/juicer/game-stats/{user_id}":
    get:
      tags:
        - juicer
      summary: Return game stats for user
      description: Return game stats for user
      operationId: getGameStats
      parameters:
        - name: user_id
          in: path
          required: true
          description: UUID of the user to fetch stats for
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GameStats"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
  /schemas:
    get:
      description: Returns a list of all identity schemas currently in use.
      operationId: listIdentitySchemas
      parameters:
        - description: >-
            Page Size
          in: query
          name: page_size
          schema:
            default: 250
            format: int64
            maximum: 500
            minimum: 1
            type: integer
        - description: >-
            Next Page Token
          in: query
          name: page_token
          schema:
            default: "1"
            minimum: 1
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentitySchemas"
          description: List Identity JSON Schemas Response
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Get all Identity Schemas
      tags:
        - juicer
  "/schemas/{id}":
    get:
      description: Return a specific identity schema.
      operationId: getIdentitySchema
      parameters:
        - description: ID must be set to the ID of schema you want to get
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentitySchema"
          description: identitySchema
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Get Identity JSON Schema
      tags:
        - juicer
  /courier/messages:
    get:
      description: Lists all messages by given status and recipient.
      operationId: listCourierMessages
      parameters:
        - description: This is the number of items per page to return.
          in: query
          name: page_size
          schema:
            default: 250
            format: int64
            maximum: 1000
            minimum: 1
            type: integer
        - description: The next page token.
          in: query
          name: page_token
          schema:
            type: string
        - description: |-
            Status filters out messages based on status.
            If no value is provided, it doesn't take effect on filter.
          in: query
          name: status
          schema:
            $ref: "#/components/schemas/CourierMessageStatus"
        - description: |-
            Recipient filters out messages based on recipient.
            If no value is provided, it doesn't take effect on filter.
          in: query
          name: recipient
          schema:
            type: string
      responses:
        "200":
          description: Paginated Courier Message List Response
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Message"
                type: array
        "400":
          $ref: "#/components/responses/GenericError"
        default:
          $ref: "#/components/responses/UnexpectedError"
      summary: List Messages
      tags:
        - juicer
  "/courier/messages/{id}":
    get:
      description: Gets a specific messages by the given ID.
      operationId: getCourierMessage
      parameters:
        - description: MessageID is the ID of the message.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
          description: message
        "400":
          $ref: "#/components/responses/GenericError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
      summary: Get a Message
      tags:
        - juicer
  /identities:
    get:
      description: >-
        Lists all
        [identities](https://www.ory.sh/docs/kratos/concepts/identity-user-model)
        in the system. Note: filters cannot be combined.
      operationId: listIdentities
      parameters:
        - description: Page Size
          in: query
          name: page_size
          schema:
            default: 250
            format: int64
            maximum: 500
            minimum: 1
            type: integer
        - description: Next Page Token
          in: query
          name: page_token
          schema:
            default: "1"
            minimum: 1
            type: string
        - description: Read Consistency Level (cloud only)
          in: query
          name: consistency
          schema:
            type: string
            enum:
              - strong
              - eventual
        - description: >-
            Retrieve multiple identities by their IDs.

            This parameter has the following limitations:

            Duplicate or non-existent IDs are ignored.

            The order of returned IDs may be different from the request.

            This filter does not support pagination. You must implement your own
            pagination as the maximum number of items returned by this endpoint
            may not exceed a certain threshold (currently 500).
          in: query
          name: ids
          schema:
            items:
              type: string
            type: array
        - description: >-
            CredentialsIdentifier is the identifier (username, email) of the
            credentials to look up using exact match.

            Only one of CredentialsIdentifier and CredentialsIdentifierSimilar
            can be used.
          in: query
          name: credentials_identifier
          schema:
            type: string
        - description: >-
            This is an EXPERIMENTAL parameter that WILL CHANGE. Do NOT rely on
            consistent, deterministic behavior.

            THIS PARAMETER WILL BE REMOVED IN AN UPCOMING RELEASE WITHOUT ANY
            MIGRATION PATH.

            CredentialsIdentifierSimilar is the (partial) identifier (username,
            email) of the credentials to look up using similarity search.

            Only one of CredentialsIdentifier and CredentialsIdentifierSimilar
            can be used.
          in: query
          name: preview_credentials_identifier_similar
          schema:
            type: string
        - description: >-
            Include Credentials in Response

            Include any credential, for example `password` or `oidc`, in the
            response. When set to `oidc`, This will return

            the initial OAuth 2.0 Access Token, OAuth 2.0 Refresh Token and the
            OpenID Connect ID Token if available.
          in: query
          name: include_credential
          schema:
            items:
              type: string
            type: array
        - description: List identities that belong to a specific organization.
          in: query
          name: organization_id
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Identity"
                type: array
          description: Paginated Identity List Response
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: List Identities
      tags:
        - juicer
    patch:
      description: >-
        Creates multiple

        [identities](https://www.ory.sh/docs/kratos/concepts/identity-user-model).

        This endpoint can also be used to [import

        credentials](https://www.ory.sh/docs/kratos/manage-identities/import-user-accounts-identities)

        for instance passwords, social sign in configurations or multifactor
        methods.
      operationId: batchPatchIdentities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchIdentitiesBody"
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPatchIdentitiesResponse"
          description: batchPatchIdentitiesResponse
        "400":
          $ref: "#/components/responses/GenericError"
        "409":
          $ref: "#/components/responses/GenericError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Create multiple identities
      tags:
        - juicer
    post:
      description: >-
        Create an
        [identity](https://www.ory.sh/docs/kratos/concepts/identity-user-model).
        This endpoint can also be used to

        [import
        credentials](https://www.ory.sh/docs/kratos/manage-identities/import-user-accounts-identities)

        for instance passwords, social sign in configurations or multifactor
        methods.
      operationId: createIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateIdentityBody"
        x-originalParamName: Body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
          description: identity
        "400":
          $ref: "#/components/responses/GenericError"
        "409":
          $ref: "#/components/responses/GenericError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Create an Identity
      tags:
        - juicer
  "/identities/{id}":
    delete:
      description: >-
        Calling this endpoint irrecoverably and permanently deletes the
        [identity](https://www.ory.sh/docs/kratos/concepts/identity-user-model)
        given its ID. This action can not be undone.

        This endpoint returns 204 when the identity was deleted or when the
        identity was not found, in which case it is

        assumed that is has been deleted already.
      operationId: deleteIdentity
      parameters:
        - description: ID is the identity's ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          $ref: "#/components/responses/EmptyResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Delete an Identity
      tags:
        - juicer
    get:
      description: >-
        Return an
        [identity](https://www.ory.sh/docs/kratos/concepts/identity-user-model)
        by its ID. You can optionally

        include credentials (e.g. social sign in connections) in the response by
        using the `include_credential` query parameter.
      operationId: getIdentity
      parameters:
        - description: ID must be set to the ID of identity you want to get
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            Include Credentials in Response

            Include any credential, for example `password` or `oidc`, in the
            response. When set to `oidc`, This will return

            the initial OAuth 2.0 Access Token, OAuth 2.0 Refresh Token and the
            OpenID Connect ID Token if available.
          in: query
          name: include_credential
          schema:
            items:
              enum:
                - password
                - oidc
                - totp
                - lookup_secret
                - webauthn
                - code
                - passkey
                - profile
                - saml
                - link_recovery
                - code_recovery
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
          description: identity
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Get an Identity
      tags:
        - juicer
    patch:
      description: >-
        Partially updates an
        [identity's](https://www.ory.sh/docs/kratos/concepts/identity-user-model)
        field using [JSON Patch](https://jsonpatch.com/).

        The fields `id`, `stateChangedAt` and `credentials` can not be updated
        using this method.
      operationId: patchIdentity
      parameters:
        - description: ID must be set to the ID of identity you want to update
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JsonPatchDocument"
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
          description: identity
        "400":
          $ref: "#/components/responses/GenericError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/GenericError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Patch an Identity
      tags:
        - juicer
    put:
      description: >-
        This endpoint updates an
        [identity](https://www.ory.sh/docs/kratos/concepts/identity-user-model).
        The full identity

        payload (except credentials) is expected. It is possible to update the
        identity's credentials as well.
      operationId: updateIdentity
      parameters:
        - description: ID must be set to the ID of identity you want to update
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateIdentityBody"
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
          description: identity
        "400":
          $ref: "#/components/responses/GenericError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "409":
          $ref: "#/components/responses/GenericError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Update an Identity
      tags:
        - juicer
  "/identities/{id}/credentials/{type}":
    delete:
      description: >-
        Delete an
        [identity](https://www.ory.sh/docs/kratos/concepts/identity-user-model)
        credential by its type.

        You cannot delete password or code auth credentials through this API.
      operationId: deleteIdentityCredentials
      parameters:
        - description: ID is the identity's ID.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            Type is the type of credentials to delete.

            password CredentialsTypePassword

            oidc CredentialsTypeOIDC

            totp CredentialsTypeTOTP

            lookup_secret CredentialsTypeLookup

            webauthn CredentialsTypeWebAuthn

            code CredentialsTypeCodeAuth

            passkey CredentialsTypePasskey

            profile CredentialsTypeProfile

            saml CredentialsTypeSAML

            link_recovery CredentialsTypeRecoveryLink
            CredentialsTypeRecoveryLink is a special credential type linked to
            the link strategy (recovery flow).  It is not used within the
            credentials object itself.

            code_recovery CredentialsTypeRecoveryCode
          in: path
          name: type
          required: true
          schema:
            enum:
              - password
              - oidc
              - totp
              - lookup_secret
              - webauthn
              - code
              - passkey
              - profile
              - saml
              - link_recovery
              - code_recovery
            type: string
        - description: >-
            Identifier is the identifier of the OIDC credential to delete.

            Find the identifier by calling the `GET
            /identities/{id}?include_credential=oidc` endpoint.
          in: query
          name: identifier
          schema:
            type: string
      responses:
        "204":
          $ref: "#/components/responses/EmptyResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Delete a credential for a specific identity
      tags:
        - juicer
  "/identities/{id}/sessions":
    delete:
      description: >-
        Calling this endpoint irrecoverably and permanently deletes and
        invalidates all sessions that belong to the given Identity.
      operationId: deleteIdentitySessions
      parameters:
        - description: ID is the identity's ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          $ref: "#/components/responses/EmptyResponse"
        "400":
          $ref: "#/components/responses/GenericError"
        "401":
          $ref: "#/components/responses/UnexpectedError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Delete & Invalidate an Identity's Sessions
      tags:
        - juicer
    get:
      description: This endpoint returns all sessions that belong to the given Identity.
      operationId: listIdentitySessions
      parameters:
        - description: >-
            Page Size

            This is the number of items per page to return. For details on
            pagination please head over to the

            [pagination
            documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
          in: query
          name: page_size
          schema:
            default: 250
            format: int64
            maximum: 500
            minimum: 1
            type: integer
        - description: >-
            Next Page Token

            The next page token. For details on pagination please head over to
            the

            [pagination
            documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
          in: query
          name: page_token
          schema:
            default: "1"
            minimum: 1
            type: string
        - description: ID is the identity's ID.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: >-
            Active is a boolean flag that filters out sessions based on the
            state. If no value is provided, all sessions are returned.
          in: query
          name: active
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Session"
                type: array
          description: List Identity Sessions Response
        "400":
          $ref: "#/components/responses/GenericError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: List an Identity's Sessions
      tags:
        - juicer
  /sessions:
    get:
      description: Listing all sessions that exist.
      operationId: listSessions
      parameters:
        - description: >-
            Items per Page

            This is the number of items per page to return.

            For details on pagination please head over to the [pagination
            documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
          in: query
          name: page_size
          schema:
            default: 250
            format: int64
            maximum: 1000
            minimum: 1
            type: integer
        - description: >-
            Next Page Token

            The next page token.

            For details on pagination please head over to the [pagination
            documentation](https://www.ory.sh/docs/ecosystem/api-design#pagination).
          in: query
          name: page_token
          schema:
            type: string
        - description: >-
            Active is a boolean flag that filters out sessions based on the
            state. If no value is provided, all sessions are returned.
          in: query
          name: active
          schema:
            type: boolean
        - description: >-
            ExpandOptions is a query parameter encoded list of all properties
            that must be expanded in the Session.

            If no value is provided, the expandable properties are skipped.
          in: query
          name: expand
          schema:
            items:
              enum:
                - identity
                - devices
              type: string
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Session"
                type: array
          description: >-
            Session List Response

            The response given when listing sessions in an administrative
            context.
        "400":
          $ref: "#/components/responses/GenericError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: List All Sessions
      tags:
        - juicer
  "/sessions/{id}":
    delete:
      description: >-
        Calling this endpoint deactivates the specified session. Session data is
        not deleted.
      operationId: disableSession
      parameters:
        - description: ID is the session's ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          $ref: "#/components/responses/EmptyResponse"
        "400":
          $ref: "#/components/responses/GenericError"
        "401":
          $ref: "#/components/responses/GenericError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Deactivate a Session
      tags:
        - juicer
    get:
      description: >-
        This endpoint is useful for:

        Getting a session object with all specified expandables that exist in an
        administrative context.
      operationId: getSession
      parameters:
        - description: >-
            ExpandOptions is a query parameter encoded list of all properties
            that must be expanded in the Session.

            Example - ?expand=Identity&expand=Devices

            If no value is provided, the expandable properties are skipped.
          in: query
          name: expand
          schema:
            items:
              enum:
                - identity
                - devices
              type: string
            type: array
        - description: ID is the session's ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
          description: session
        "400":
          $ref: "#/components/responses/GenericError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Get Session
      tags:
        - juicer
  "/sessions/{id}/extend":
    patch:
      description: >-
        Calling this endpoint extends the given session ID. If
        `session.earliest_possible_extend` is set it

        will only extend the session after the specified time has passed.

        This endpoint returns per default a 204 No Content response on success.
        Older Ory Network projects may

        return a 200 OK response with the session in the body. Returning the
        session as part of the response

        will be deprecated in the future and should not be relied upon.

        This endpoint ignores consecutive requests to extend the same session
        and returns a 404 error in those

        scenarios. This endpoint also returns 404 errors if the session does not
        exist.

        Retrieve the session ID from the `/sessions/whoami` endpoint /
        `toSession` SDK method.
      operationId: extendSession
      parameters:
        - description: ID is the session's ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
          description: session
        "204":
          $ref: "#/components/responses/EmptyResponse"
        "400":
          $ref: "#/components/responses/GenericError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Extend a Session
      tags:
        - juicer
  /recovery/code:
    post:
      description: >-
        This endpoint creates a recovery code which should be given to the user
        in order for them to recover

        (or activate) their account.
      operationId: createRecoveryCodeForIdentity
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRecoveryCodeForIdentityBody"
        x-originalParamName: Body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecoveryCodeForIdentity"
          description: recoveryCodeForIdentity
        "400":
          $ref: "#/components/responses/GenericError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Create a Recovery Code
      tags:
        - juicer
  /recovery/link:
    post:
      description: >-
        This endpoint creates a recovery link which should be given to the user
        in order for them to recover

        (or activate) their account.
      operationId: createRecoveryLinkForIdentity
      parameters:
        - in: query
          name: return_to
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRecoveryLinkForIdentityBody"
        x-originalParamName: Body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecoveryLinkForIdentity"
          description: recoveryLinkForIdentity
        "400":
          $ref: "#/components/responses/GenericError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        default:
          $ref: "#/components/responses/UnexpectedError"
          description: errorGeneric
      summary: Create a Recovery Link
      tags:
        - juicer
  # /credentials:
  #   post:
  #     description: >-
  #       This endpoint creates a verifiable credential that attests that the user

  #       authenticated with the provided access token owns a certain
  #       public/private key

  #       pair.

  #       More information can be found at

  #       https://openid.net/specs/openid-connect-userinfo-vc-1_0.html.
  #     operationId: createVerifiableCredential
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/CreateVerifiableCredentialRequestBody"
  #       x-originalParamName: Body
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/VerifiableCredentialResponse"
  #         description: verifiableCredentialResponse
  #       "400":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/VerifiableCredentialPrimingResponse"
  #         description: verifiableCredentialPrimingResponse
  #       default:
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ErrorOAuth2"
  #         description: errorOAuth2
  #     summary: Issues a Verifiable Credential
  #     tags:
  #       - juicer
  # /relation-tuples:
  #   delete:
  #     description: Use this endpoint to delete relationships
  #     operationId: deleteRelationships
  #     parameters:
  #       - description: Namespace of the Relationship
  #         in: query
  #         name: namespace
  #         schema:
  #           type: string
  #       - description: Object of the Relationship
  #         in: query
  #         name: object
  #         schema:
  #           type: string
  #       - description: Relation of the Relationship
  #         in: query
  #         name: relation
  #         schema:
  #           type: string
  #       - description: SubjectID of the Relationship
  #         in: query
  #         name: subject_id
  #         schema:
  #           type: string
  #       - description: Namespace of the Subject Set
  #         in: query
  #         name: subject_set.namespace
  #         schema:
  #           type: string
  #       - description: Object of the Subject Set
  #         in: query
  #         name: subject_set.object
  #         schema:
  #           type: string
  #       - description: Relation of the Subject Set
  #         in: query
  #         name: subject_set.relation
  #         schema:
  #           type: string
  #     responses:
  #       "204":
  #         $ref: "#/components/responses/EmptyResponse"
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Delete Relationships
  #     tags:
  #       - juicer
  #   patch:
  #     description: Use this endpoint to patch one or more relationships.
  #     operationId: patchRelationships
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             items:
  #               $ref: "#/components/schemas/RelationshipPatch"
  #             type: array
  #       x-originalParamName: Body
  #     responses:
  #       "204":
  #         $ref: "#/components/responses/EmptyResponse"
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       "404":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Patch Multiple Relationships
  #     tags:
  #       - juicer
  #   put:
  #     description: Use this endpoint to create a relationship.
  #     operationId: createRelationship
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/CreateRelationshipBody"
  #       x-originalParamName: Body
  #     responses:
  #       "201":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/Relationship"
  #         description: relationship
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Create a Relationship
  #     tags:
  #       - juicer
  # /namespaces:
  #   get:
  #     description: Get all namespaces
  #     operationId: listRelationshipNamespaces
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/RelationshipNamespaces"
  #         description: relationshipNamespaces
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Query namespaces
  #     tags:
  #       - juicer
  # /opl/syntax/check:
  #   post:
  #     description: The OPL file is expected in the body of the request.
  #     operationId: checkOplSyntax
  #     requestBody:
  #       content:
  #         text/plain:
  #           schema:
  #             $ref: "#/components/schemas/CheckOplSyntaxBody"
  #       x-originalParamName: Body
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/CheckOplSyntaxResult"
  #         description: checkOplSyntaxResult
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Check the syntax of an OPL file
  #     tags:
  #       - juicer
  # /relation-tuples:
  #   get:
  #     description: >-
  #       Get all relationships that match the query. Only the namespace field is
  #       required.
  #     operationId: getRelationships
  #     parameters:
  #       - in: query
  #         name: page_token
  #         schema:
  #           type: string
  #       - in: query
  #         name: page_size
  #         schema:
  #           format: int64
  #           type: integer
  #       - description: Namespace of the Relationship
  #         in: query
  #         name: namespace
  #         schema:
  #           type: string
  #       - description: Object of the Relationship
  #         in: query
  #         name: object
  #         schema:
  #           type: string
  #       - description: Relation of the Relationship
  #         in: query
  #         name: relation
  #         schema:
  #           type: string
  #       - description: SubjectID of the Relationship
  #         in: query
  #         name: subject_id
  #         schema:
  #           type: string
  #       - description: Namespace of the Subject Set
  #         in: query
  #         name: subject_set.namespace
  #         schema:
  #           type: string
  #       - description: Object of the Subject Set
  #         in: query
  #         name: subject_set.object
  #         schema:
  #           type: string
  #       - description: Relation of the Subject Set
  #         in: query
  #         name: subject_set.relation
  #         schema:
  #           type: string
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/Relationships"
  #         description: relationships
  #       "404":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Query relationships
  #     tags:
  #       - juicer
  # /relation-tuples/batch/check:
  #   post:
  #     description: >-
  #       To learn how relationship tuples and the check works, head over to [the
  #       documentation](https://www.ory.sh/docs/keto/concepts/api-overview).
  #     operationId: batchCheckPermission
  #     parameters:
  #       - in: query
  #         name: max-depth
  #         schema:
  #           format: int64
  #           type: integer
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/BatchCheckPermissionBody"
  #       x-originalParamName: Body
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/BatchCheckPermissionResult"
  #         description: batchCheckPermissionResult
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Batch check permissions
  #     tags:
  #       - juicer
  # /relation-tuples/check:
  #   get:
  #     description: >-
  #       To learn how relationship tuples and the check works, head over to [the
  #       documentation](https://www.ory.sh/docs/keto/concepts/api-overview).
  #     operationId: checkPermissionOrError
  #     parameters:
  #       - description: Namespace of the Relationship
  #         in: query
  #         name: namespace
  #         schema:
  #           type: string
  #       - description: Object of the Relationship
  #         in: query
  #         name: object
  #         schema:
  #           type: string
  #       - description: Relation of the Relationship
  #         in: query
  #         name: relation
  #         schema:
  #           type: string
  #       - description: SubjectID of the Relationship
  #         in: query
  #         name: subject_id
  #         schema:
  #           type: string
  #       - description: Namespace of the Subject Set
  #         in: query
  #         name: subject_set.namespace
  #         schema:
  #           type: string
  #       - description: Object of the Subject Set
  #         in: query
  #         name: subject_set.object
  #         schema:
  #           type: string
  #       - description: Relation of the Subject Set
  #         in: query
  #         name: subject_set.relation
  #         schema:
  #           type: string
  #       - in: query
  #         name: max-depth
  #         schema:
  #           format: int64
  #           type: integer
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/CheckPermissionResult"
  #         description: checkPermissionResult
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       "403":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/CheckPermissionResult"
  #         description: checkPermissionResult
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Check a permission
  #     tags:
  #       - juicer
  #   post:
  #     description: >-
  #       To learn how relationship tuples and the check works, head over to [the
  #       documentation](https://www.ory.sh/docs/keto/concepts/api-overview).
  #     operationId: postCheckPermissionOrError
  #     parameters:
  #       - in: query
  #         name: max-depth
  #         schema:
  #           format: int64
  #           type: integer
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/PostCheckPermissionOrErrorBody"
  #       x-originalParamName: Body
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/CheckPermissionResult"
  #         description: checkPermissionResult
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       "403":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/CheckPermissionResult"
  #         description: checkPermissionResult
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Check a permission
  #     tags:
  #       - juicer
  # /relation-tuples/check/openapi:
  #   get:
  #     description: >-
  #       To learn how relationship tuples and the check works, head over to [the
  #       documentation](https://www.ory.sh/docs/keto/concepts/api-overview).
  #     operationId: checkPermission
  #     parameters:
  #       - description: Namespace of the Relationship
  #         in: query
  #         name: namespace
  #         schema:
  #           type: string
  #       - description: Object of the Relationship
  #         in: query
  #         name: object
  #         schema:
  #           type: string
  #       - description: Relation of the Relationship
  #         in: query
  #         name: relation
  #         schema:
  #           type: string
  #       - description: SubjectID of the Relationship
  #         in: query
  #         name: subject_id
  #         schema:
  #           type: string
  #       - description: Namespace of the Subject Set
  #         in: query
  #         name: subject_set.namespace
  #         schema:
  #           type: string
  #       - description: Object of the Subject Set
  #         in: query
  #         name: subject_set.object
  #         schema:
  #           type: string
  #       - description: Relation of the Subject Set
  #         in: query
  #         name: subject_set.relation
  #         schema:
  #           type: string
  #       - in: query
  #         name: max-depth
  #         schema:
  #           format: int64
  #           type: integer
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/CheckPermissionResult"
  #         description: checkPermissionResult
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Check a permission
  #     tags:
  #       - juicer
  #   post:
  #     description: >-
  #       To learn how relationship tuples and the check works, head over to [the
  #       documentation](https://www.ory.sh/docs/keto/concepts/api-overview).
  #     operationId: postCheckPermission
  #     parameters:
  #       - in: query
  #         name: max-depth
  #         schema:
  #           format: int64
  #           type: integer
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: "#/components/schemas/PostCheckPermissionBody"
  #       x-originalParamName: Payload
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/CheckPermissionResult"
  #         description: checkPermissionResult
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Check a permission
  #     tags:
  #       - juicer
  # /relation-tuples/expand:
  #   get:
  #     description: Use this endpoint to expand a relationship tuple into permissions.
  #     operationId: expandPermissions
  #     parameters:
  #       - description: Namespace of the Subject Set
  #         in: query
  #         name: namespace
  #         required: true
  #         schema:
  #           type: string
  #       - description: Object of the Subject Set
  #         in: query
  #         name: object
  #         required: true
  #         schema:
  #           type: string
  #       - description: Relation of the Subject Set
  #         in: query
  #         name: relation
  #         required: true
  #         schema:
  #           type: string
  #       - in: query
  #         name: max-depth
  #         schema:
  #           format: int64
  #           type: integer
  #     responses:
  #       "200":
  #         content:
  #           application/json:
  #             schema:
  #               $ref: "#/components/schemas/ExpandedPermissionTree"
  #         description: expandedPermissionTree
  #       "400":
  #         $ref: "#/components/responses/UnexpectedError"
  #       "404":
  #         $ref: "#/components/responses/UnexpectedError"
  #       default:
  #         $ref: "#/components/responses/UnexpectedError"
  #         description: errorGeneric
  #     summary: Expand a Relationship into permissions.
  #     tags:
  #       - juicer

components:
  responses:
    UnexpectedError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    GenericError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFoundError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    EmptyResponse:
      description: >-
        Empty responses are sent when, for example, resources are deleted. The
        HTTP status code for empty responses is

        typically 201 or 204

  schemas:
    UUID:
      type: string
      format: uuid
    NullBool:
      nullable: true
      type: boolean
    NullDuration:
      nullable: true
      pattern: "^[0-9]+(ns|us|ms|s|m|h)$"
      type: string
    NullInt:
      nullable: true
      type: integer
    NullString:
      nullable: true
      type: string
    NullTime:
      format: date-time
      nullable: true
      type: string
    NullUUID:
      format: uuid4
      nullable: true
      type: string
    NullInt64:
      nullable: true
      type: integer
    NullJsonRawMessage:
      description: >-
        NullJSONRawMessage represents a json.RawMessage that works well with
        JSON, SQL, and Swagger and is NULLable-
      nullable: true
      type: object
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: Error code
        message:
          type: string
          description: Error message
    Healthy:
      type: object
      required:
        - alive
      properties:
        alive:
          type: boolean
    Ready:
      type: object
      required:
        - ready
      properties:
        ready:
          type: boolean
    GameVariant:
      type: object
      required:
        - id
        - name
        - enabled
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
          description: Game variant id
        name:
          type: string
          description: Game variant name
        enabled:
          type: boolean
          description: Whether a game variant is supported (enabled)
    GameTimeKind:
      type: object
      required:
        - id
        - name
        - enabled
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
          description: Game time kind id
        name:
          type: string
          description: Game time kind name
        enabled:
          type: boolean
          description: Whether a game time kind is supported (enabled)
    GameTimeCategory:
      type: object
      required:
        - id
        - name
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/UUID"
          description: Game time category id
        name:
          type: string
          description: Game time category name
        upper_time_limit_secs:
          type: integer
          format: int32
          description: Game time category upper time limit
    QuickGame:
      type: object
      required:
        - name
        - clock_secs
        - increment_secs
      properties:
        name:
          type: string
          description: Quick game name
        clock_secs:
          type: integer
          format: int32
          description: Clock seconds
        increment_secs:
          type: integer
          format: int32
          description: Increment seconds
    GameStats:
      type: object
      properties:
        hyperbullet:
          $ref: "#/components/schemas/GameStat"
        bullet:
          $ref: "#/components/schemas/GameStat"
        blitz:
          $ref: "#/components/schemas/GameStat"
        rapid:
          $ref: "#/components/schemas/GameStat"
        classical:
          $ref: "#/components/schemas/GameStat"
        all:
          $ref: "#/components/schemas/GameStat"
      required:
        - hyperbullet
        - bullet
        - blitz
        - rapid
        - classical
        - all
    GameStat:
      type: object
      properties:
        win:
          type: integer
          format: int32
        loss:
          type: integer
          format: int32
        draw:
          type: integer
          format: int32
        interrupted:
          type: integer
          format: int32
        total:
          type: integer
          format: int32
      required:
        - win
        - loss
        - draw
        - interrupted
    AmountInCent:
      format: int64
      type: integer
    CreateVerifiableCredentialRequestBody:
      properties:
        format:
          type: string
        proof:
          $ref: "#/components/schemas/VerifiableCredentialProof"
        types:
          items:
            type: string
          type: array
      title: >-
        CreateVerifiableCredentialRequestBody contains the request body to
        request a verifiable credential.
      type: object
    CustomHostnameStatus:
      title: >-
        CustomHostnameStatus is the enumeration of valid state values in the
        CustomHostnameSSL.
      type: string
    DefaultError: {}
    Duration:
      description: |-
        A Duration represents the elapsed time between two instants
        as an int64 nanosecond count. The representation limits the
        largest representable duration to approximately 290 years.
      format: int64
      type: integer
    ID:
      format: int64
      type: integer
    InvoiceDataV1:
      properties:
        billing_period:
          $ref: "#/components/schemas/TimeInterval"
        currency:
          description: The currency of the invoice.
          readOnly: true
          type: string
        deleted:
          description: Deleted is true if the invoice has been soft-deleted.
          readOnly: true
          type: boolean
        items:
          description: The items that are part of this invoice.
          items:
            $ref: "#/components/schemas/LineItemV1"
          readOnly: true
          type: array
        plan:
          description: >-
            The plan that this invoice is based on, in the format
            "Name@version".
          readOnly: true
          type: string
        stripe_invoice_item:
          type: string
        stripe_invoice_status:
          $ref: "#/components/schemas/InvoiceStatus"
        stripe_link:
          description: An optional link to the invoice on Stripe.
          readOnly: true
          type: string
        subtitle:
          description: The subtitle of the invoice.
          readOnly: true
          type: string
        tax:
          $ref: "#/components/schemas/TaxLineItem"
        title:
          description: The title of the invoice.
          readOnly: true
          type: string
        total_in_cent:
          $ref: "#/components/schemas/AmountInCent"
      required:
        - title
        - currency
        - total_in_cent
        - billing_period
        - items
      type: object
    InvoiceStatus:
      description: >-
        The status of the invoice, one of `draft`, `open`, `paid`,
        `uncollectible`, or `void`. [Learn
        more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
      type: string
    JSONRawMessage:
      title: >-
        JSONRawMessage represents a json.RawMessage that works well with JSON,
        SQL, and Swagger.
      type: object
    KetoNamespace:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    KetoNamespaces:
      items:
        $ref: "#/components/schemas/KetoNamespace"
      type: array
    LineItemV1:
      properties:
        amount_in_cent:
          $ref: "#/components/schemas/AmountInCent"
        description:
          type: string
        items:
          description: Each line item can have sub-items to create a hierarchy.
          items:
            $ref: "#/components/schemas/LineItemV1"
          type: array
        quantity:
          format: int64
          type: integer
        title:
          type: string
        unit_price:
          type: string
      type: object
    RecoveryAddressType:
      title: >-
        RecoveryAddressType must not exceed 16 characters as that is the
        limitation in the SQL Schema.
      type: string
    String:
      $ref: "#/components/schemas/NullString"
    StringSliceJSONFormat:
      items:
        type: string
      title: >-
        StringSliceJSONFormat represents []string{} which is encoded to/from
        JSON for SQL storage.
      type: array
    TaxLineItem:
      properties:
        amount_in_cent:
          $ref: "#/components/schemas/AmountInCent"
        title:
          type: string
      type: object
    Time:
      format: date-time
      type: string
    TimeInterval:
      properties:
        end:
          description: The end of the time period.
          format: date-time
          type: string
        start:
          description: The start of the time period.
          format: date-time
          type: string
      required:
        - start
        - end
      type: object
    VerifiableCredentialProof:
      properties:
        jwt:
          type: string
        proof_type:
          type: string
      title: VerifiableCredentialProof contains the proof of a verifiable credential.
      type: object
    AuthenticatorAssuranceLevel:
      description: >-
        The authenticator assurance level can be one of "aal1", "aal2", or
        "aal3". A higher number means that it is harder

        for an attacker to compromise the account.


        Generally, "aal1" implies that one authentication factor was used while
        AAL2 implies that two factors (e.g.

        password + TOTP) have been used.


        To learn more about these levels please head over to:
        https://www.ory.sh/kratos/docs/concepts/credentials
      enum:
        - aal0
        - aal1
        - aal2
        - aal3
      title: Authenticator Assurance Level (AAL)
      type: string
    BatchCheckPermissionBody:
      description: Batch Check Permission Body
      properties:
        tuples:
          items:
            $ref: "#/components/schemas/Relationship"
          type: array
      type: object
    BatchCheckPermissionResult:
      description: Batch Check Permission Result
      properties:
        results:
          description: An array of check results. The order aligns with the input order.
          items:
            $ref: "#/components/schemas/CheckPermissionResultWithError"
          type: array
      required:
        - results
      type: object
    BatchPatchIdentitiesResponse:
      description: Patch identities response
      properties:
        identities:
          description: The patch responses for the individual identities.
          items:
            $ref: "#/components/schemas/IdentityPatchResponse"
          type: array
      type: object
    CheckOplSyntaxBody:
      description: Ory Permission Language Document
      type: string
    CheckOplSyntaxResult:
      properties:
        errors:
          description: The list of syntax errors
          items:
            $ref: "#/components/schemas/ParseError"
          type: array
      title: >-
        CheckOPLSyntaxResponse represents the response for an OPL syntax check
        request.
      type: object
    CheckPermissionResult:
      description: The content of the allowed field is mirrored in the HTTP status code.
      properties:
        allowed:
          description: whether the relation tuple is allowed
          type: boolean
      required:
        - allowed
      title: Check Permission Result
      type: object
    CheckPermissionResultWithError:
      description: Check Permission Result With Error
      properties:
        allowed:
          description: whether the relation tuple is allowed
          type: boolean
        error:
          description: any error generated while checking the relation tuple
          type: string
      required:
        - allowed
      type: object
    ContinueWithRecoveryUi:
      description: "Indicates, that the UI flow could be continued by showing a recovery ui"
      properties:
        action:
          description: |-
            Action will always be `show_recovery_ui`
            show_recovery_ui ContinueWithActionShowRecoveryUIString
          enum:
            - show_recovery_ui
          type: string
        flow:
          $ref: "#/components/schemas/ContinueWithRecoveryUiFlow"
      required:
        - action
        - flow
      type: object
    ContinueWithRecoveryUiFlow:
      properties:
        id:
          description: The ID of the recovery flow
          format: uuid
          type: string
        url:
          description: >-
            The URL of the recovery flow


            If this value is set, redirect the user's browser to this URL. This
            value is typically unset for native clients / API flows.
          type: string
      required:
        - id
      type: object
    ContinueWithRedirectBrowserTo:
      description: "Indicates, that the UI flow could be continued by showing a recovery ui"
      properties:
        action:
          description: |-
            Action will always be `redirect_browser_to`
            redirect_browser_to ContinueWithActionRedirectBrowserToString
          enum:
            - redirect_browser_to
          type: string
        redirect_browser_to:
          description: The URL to redirect the browser to
          type: string
      required:
        - action
        - redirect_browser_to
      type: object
    ContinueWithSetOrySessionToken:
      description: >-
        Indicates that a session was issued, and the application should use this
        token for authenticated requests
      properties:
        action:
          description: |-
            Action will always be `set_ory_session_token`
            set_ory_session_token ContinueWithActionSetOrySessionTokenString
          enum:
            - set_ory_session_token
          type: string
        ory_session_token:
          description: Token is the token of the session
          type: string
      required:
        - action
        - ory_session_token
      type: object
    ContinueWithSettingsUi:
      description: "Indicates, that the UI flow could be continued by showing a settings ui"
      properties:
        action:
          description: |-
            Action will always be `show_settings_ui`
            show_settings_ui ContinueWithActionShowSettingsUIString
          enum:
            - show_settings_ui
          type: string
        flow:
          $ref: "#/components/schemas/ContinueWithSettingsUiFlow"
      required:
        - action
        - flow
      type: object
    ContinueWithSettingsUiFlow:
      properties:
        id:
          description: The ID of the settings flow
          format: uuid
          type: string
        url:
          description: >-
            The URL of the settings flow


            If this value is set, redirect the user's browser to this URL. This
            value is typically unset for native clients / API flows.
          type: string
      required:
        - id
      type: object
    ContinueWithVerificationUi:
      description: >-
        Indicates, that the UI flow could be continued by showing a verification
        ui
      properties:
        action:
          description: |-
            Action will always be `show_verification_ui`
            show_verification_ui ContinueWithActionShowVerificationUIString
          enum:
            - show_verification_ui
          type: string
        flow:
          $ref: "#/components/schemas/ContinueWithVerificationUiFlow"
      required:
        - action
        - flow
      type: object
    ContinueWithVerificationUiFlow:
      properties:
        id:
          description: The ID of the verification flow
          format: uuid
          type: string
        url:
          description: >-
            The URL of the verification flow


            If this value is set, redirect the user's browser to this URL. This
            value is typically unset for native clients / API flows.
          type: string
        verifiable_address:
          description: The address that should be verified in this flow
          type: string
      required:
        - id
        - verifiable_address
      type: object
    CourierMessageStatus:
      description: A Message's Status
      enum:
        - queued
        - sent
        - processing
        - abandoned
      type: string
    CourierMessageType:
      description: It can either be `email` or `phone`
      enum:
        - email
        - phone
      title: A Message's Type
      type: string
    CourierMessageTemplateType:
      description: Template type
      enum:
        - recovery_invalid
        - recovery_valid
        - recovery_code_invalid
        - recovery_code_valid
        - verification_invalid
        - verification_valid
        - verification_code_invalid
        - verification_code_valid
        - stub
        - login_code_valid
        - registration_code_valid
      type: string
    CreateIdentityBody:
      description: Create Identity Body
      properties:
        credentials:
          $ref: "#/components/schemas/IdentityWithCredentials"
        metadata_admin:
          description: >-
            Store metadata about the user which is only accessible through admin
            APIs such as `GET /identities/<id>`.
        metadata_public:
          description: >-
            Store metadata about the identity which the identity itself can see
            when calling for example the

            session endpoint. Do not store sensitive information (e.g. credit
            score) about the identity in this field.
        organization_id:
          $ref: "#/components/schemas/NullUUID"
        recovery_addresses:
          description: >-
            RecoveryAddresses contains all the addresses that can be used to
            recover an identity.


            Use this structure to import recovery addresses for an identity.
            Please keep in mind

            that the address needs to be represented in the Identity Schema or
            this field will be overwritten

            on the next identity update.
          items:
            $ref: "#/components/schemas/RecoveryIdentityAddress"
          type: array
        schema_id:
          description: >-
            SchemaID is the ID of the JSON Schema to be used for validating the
            identity's traits.
          type: string
        state:
          description: |-
            State is the identity's state.
            active StateActive
            inactive StateInactive
          enum:
            - active
            - inactive
          type: string
        traits:
          description: >-
            Traits represent an identity's traits. The identity is able to
            create, modify, and delete traits

            in a self-service manner. The input will always be validated against
            the JSON Schema defined

            in `schema_url`.
          type: object
        verifiable_addresses:
          description: >-
            VerifiableAddresses contains all the addresses that can be verified
            by the user.


            Use this structure to import verified addresses for an identity.
            Please keep in mind

            that the address needs to be represented in the Identity Schema or
            this field will be overwritten

            on the next identity update.
          items:
            $ref: "#/components/schemas/VerifiableIdentityAddress"
          type: array
      required:
        - schema_id
        - traits
      type: object
    CreateRecoveryCodeForIdentityBody:
      description: Create Recovery Code for Identity Request Body
      properties:
        expires_in:
          description: >-
            Code Expires In


            The recovery code will expire after that amount of time has passed.
            Defaults to the configuration value of

            `selfservice.methods.code.config.lifespan`.
          pattern: "^([0-9]+(ns|us|ms|s|m|h))*$"
          type: string
        flow_type:
          $ref: "#/components/schemas/SelfServiceFlowType"
        identity_id:
          description: |-
            Identity to Recover

            The identity's ID you wish to recover.
          format: uuid
          type: string
      required:
        - identity_id
      type: object
    CreateRecoveryLinkForIdentityBody:
      description: Create Recovery Link for Identity Request Body
      properties:
        expires_in:
          description: >-
            Link Expires In


            The recovery link will expire after that amount of time has passed.
            Defaults to the configuration value of

            `selfservice.methods.code.config.lifespan`.
          pattern: "^[0-9]+(ns|us|ms|s|m|h)$"
          type: string
        identity_id:
          description: |-
            Identity to Recover

            The identity's ID you wish to recover.
          format: uuid
          type: string
      required:
        - identity_id
      type: object
    CreateRelationshipBody:
      description: Create Relationship Request Body
      properties:
        namespace:
          description: Namespace to query
          type: string
        object:
          description: Object to query
          type: string
        relation:
          description: Relation to query
          type: string
        subject_id:
          description: |-
            SubjectID to query

            Either SubjectSet or SubjectID can be provided.
          type: string
        subject_set:
          $ref: "#/components/schemas/SubjectSet"
      type: object
    DeleteMySessionsCount:
      description: Deleted Session Count
      properties:
        count:
          description: The number of sessions that were revoked.
          format: int64
          type: integer
      type: object
    ExpandedPermissionTree:
      properties:
        children:
          description: "The children of the node, possibly none."
          items:
            $ref: "#/components/schemas/ExpandedPermissionTree"
          type: array
        tuple:
          $ref: "#/components/schemas/Relationship"
        type:
          description: |-
            The type of the node.
            union TreeNodeUnion
            exclusion TreeNodeExclusion
            intersection TreeNodeIntersection
            leaf TreeNodeLeaf
            tuple_to_subject_set TreeNodeTupleToSubjectSet
            computed_subject_set TreeNodeComputedSubjectSet
            not TreeNodeNot
            unspecified TreeNodeUnspecified
          enum:
            - union
            - exclusion
            - intersection
            - leaf
            - tuple_to_subject_set
            - computed_subject_set
            - not
            - unspecified
          type: string
      required:
        - type
      type: object
    Identity:
      description: >-
        An
        [identity](https://www.ory.sh/docs/kratos/concepts/identity-user-model)
        represents a (human) user in Ory.
      properties:
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        credentials:
          additionalProperties:
            $ref: "#/components/schemas/IdentityCredentials"
          description: >-
            Credentials represents all credentials that can be used for
            authenticating this identity.
          type: object
        id:
          description: >-
            ID is the identity's unique identifier.


            The Identity ID can not be changed and can not be chosen. This
            ensures future

            compatibility and optimization for distributed stores such as
            CockroachDB.
          format: uuid
          type: string
        metadata_admin:
          $ref: "#/components/schemas/NullJsonRawMessage"
        metadata_public:
          $ref: "#/components/schemas/NullJsonRawMessage"
        organization_id:
          $ref: "#/components/schemas/NullUUID"
        recovery_addresses:
          description: >-
            RecoveryAddresses contains all the addresses that can be used to
            recover an identity.
          items:
            $ref: "#/components/schemas/RecoveryIdentityAddress"
          type: array
          x-omitempty: true
        schema_id:
          description: >-
            SchemaID is the ID of the JSON Schema to be used for validating the
            identity's traits.
          type: string
        schema_url:
          description: >-
            SchemaURL is the URL of the endpoint where the identity's traits
            schema can be fetched from.


            format: url
          type: string
        state:
          description: |-
            State is the identity's state.

            This value has currently no effect.
            active StateActive
            inactive StateInactive
          enum:
            - active
            - inactive
          type: string
        state_changed_at:
          $ref: "#/components/schemas/NullTime"
        traits:
          $ref: "#/components/schemas/IdentityTraits"
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        verifiable_addresses:
          description: >-
            VerifiableAddresses contains all the addresses that can be verified
            by the user.
          items:
            $ref: "#/components/schemas/VerifiableIdentityAddress"
          type: array
          x-omitempty: true
      required:
        - id
        - schema_id
        - schema_url
        - traits
      title: Identity represents an Ory Kratos identity
      type: object
    IdentityCredentials:
      description: Credentials represents a specific credential type
      properties:
        config:
          $ref: "#/components/schemas/JSONRawMessage"
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        identifiers:
          description: >-
            Identifiers represents a list of unique identifiers this credential
            type matches.
          items:
            type: string
          type: array
        type:
          description: >-
            Type discriminates between different types of credentials.

            password CredentialsTypePassword

            oidc CredentialsTypeOIDC

            totp CredentialsTypeTOTP

            lookup_secret CredentialsTypeLookup

            webauthn CredentialsTypeWebAuthn

            code CredentialsTypeCodeAuth

            passkey CredentialsTypePasskey

            profile CredentialsTypeProfile

            saml CredentialsTypeSAML

            link_recovery CredentialsTypeRecoveryLink 
            CredentialsTypeRecoveryLink is a special credential type linked to
            the link strategy (recovery flow).  It is not used within the
            credentials object itself.

            code_recovery CredentialsTypeRecoveryCode
          enum:
            - password
            - oidc
            - totp
            - lookup_secret
            - webauthn
            - code
            - passkey
            - profile
            - saml
            - link_recovery
            - code_recovery
          type: string
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        version:
          description: >-
            Version refers to the version of the credential. Useful when
            changing the config schema.
          format: int64
          type: integer
      type: object
    IdentityPatch:
      description: Payload for patching an identity
      properties:
        create:
          $ref: "#/components/schemas/CreateIdentityBody"
        patch_id:
          description: >-
            The ID of this patch.


            The patch ID is optional. If specified, the ID will be returned in
            the

            response, so consumers of this API can correlate the response with
            the

            patch.
          format: uuid
          type: string
      type: object
    IdentityPatchResponse:
      description: Response for a single identity patch
      properties:
        action:
          description: |-
            The action for this specific patch
            create ActionCreate  Create this identity.
            error ActionError  Error indicates that the patch failed.
          enum:
            - create
            - error
          type: string
        error:
          $ref: "#/components/schemas/DefaultError"
        identity:
          description: The identity ID payload of this patch
          format: uuid
          type: string
        patch_id:
          description: "The ID of this patch response, if an ID was specified in the patch."
          format: uuid
          type: string
      type: object
    IdentitySchema:
      description: Raw JSON Schema
      type: object
    IdentitySchemaContainer:
      description: An Identity JSON Schema Container
      properties:
        id:
          description: The ID of the Identity JSON Schema
          type: string
        schema:
          description: The actual Identity JSON Schema
          type: object
      type: object
    IdentitySchemas:
      description: List of Identity JSON Schemas
      items:
        $ref: "#/components/schemas/IdentitySchemaContainer"
      type: array
    IdentityTraits:
      description: >-
        Traits represent an identity's traits. The identity is able to create,
        modify, and delete traits

        in a self-service manner. The input will always be validated against the
        JSON Schema defined

        in `schema_url`.
    IdentityVerifiableAddressStatus:
      description: >-
        VerifiableAddressStatus must not exceed 16 characters as that is the
        limitation in the SQL Schema
      type: string
    IdentityWithCredentials:
      description: Create Identity and Import Credentials
      properties:
        oidc:
          $ref: "#/components/schemas/IdentityWithCredentialsOidc"
        password:
          $ref: "#/components/schemas/IdentityWithCredentialsPassword"
        saml:
          $ref: "#/components/schemas/IdentityWithCredentialsSaml"
      type: object
    IdentityWithCredentialsOidc:
      description: Create Identity and Import Social Sign In Credentials
      properties:
        config:
          $ref: "#/components/schemas/IdentityWithCredentialsOidcConfig"
      type: object
    IdentityWithCredentialsOidcConfig:
      properties:
        providers:
          description: A list of OpenID Connect Providers
          items:
            $ref: "#/components/schemas/IdentityWithCredentialsOidcConfigProvider"
          type: array
      type: object
    IdentityWithCredentialsOidcConfigProvider:
      description: Create Identity and Import Social Sign In Credentials Configuration
      properties:
        organization:
          $ref: "#/components/schemas/NullUUID"
        provider:
          description: >-
            The OpenID Connect provider to link the subject to. Usually
            something like `google` or `github`.
          type: string
        subject:
          description: >-
            The subject (`sub`) of the OpenID Connect connection. Usually the
            `sub` field of the ID Token.
          type: string
        use_auto_link:
          description: >-
            If set, this credential allows the user to sign in using the OpenID
            Connect provider without setting the subject first.
          type: boolean
      required:
        - subject
        - provider
      type: object
    IdentityWithCredentialsPassword:
      description: Create Identity and Import Password Credentials
      properties:
        config:
          $ref: "#/components/schemas/IdentityWithCredentialsPasswordConfig"
      type: object
    IdentityWithCredentialsPasswordConfig:
      description: Create Identity and Import Password Credentials Configuration
      properties:
        hashed_password:
          description: >-
            The hashed password in [PHC
            format](https://www.ory.sh/docs/kratos/manage-identities/import-user-accounts-identities#hashed-passwords)
          type: string
        password:
          description: The password in plain text if no hash is available.
          type: string
        use_password_migration_hook:
          description: >-
            If set to true, the password will be migrated using the password
            migration hook.
          type: boolean
      type: object
    IdentityWithCredentialsSaml:
      description: Payload to import SAML credentials
      properties:
        config:
          $ref: "#/components/schemas/IdentityWithCredentialsSamlConfig"
      type: object
    IdentityWithCredentialsSamlConfig:
      description: Payload of SAML providers
      properties:
        providers:
          description: A list of SAML Providers
          items:
            $ref: "#/components/schemas/IdentityWithCredentialsSamlConfigProvider"
          type: array
      type: object
    IdentityWithCredentialsSamlConfigProvider:
      description: Payload of specific SAML provider
      properties:
        organization:
          $ref: "#/components/schemas/NullUUID"
        provider:
          description: The SAML provider to link the subject to.
          type: string
        subject:
          description: >-
            The unique subject of the SAML connection. This value must be
            immutable at the source.
          type: string
      required:
        - subject
        - provider
      type: object
    Invoice:
      properties:
        id:
          description: The ID of the invoice.
          format: uuid
          readOnly: true
          type: string
        invoiced_at:
          $ref: "#/components/schemas/Time"
        type:
          description: |-
            Type is the type of the invoice.
            usage InvoiceTypeUsage
            base InvoiceTypeBase
          enum:
            - usage
            - base
          readOnly: true
          type: string
        updated_at:
          format: date-time
          type: string
        v1:
          $ref: "#/components/schemas/InvoiceDataV1"
      required:
        - id
        - invoiced_at
        - type
      type: object
    JsonPatch:
      description: A JSONPatch document as defined by RFC 6902
      properties:
        from:
          description: >-
            This field is used together with operation "move" and uses JSON
            Pointer notation.


            Learn more [about JSON
            Pointers](https://datatracker.ietf.org/doc/html/rfc6901#section-5).
          example: /name
          type: string
        op:
          description: >-
            The operation to be performed. One of "add", "remove", "replace",
            "move", "copy", or "test".
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
          example: replace
          type: string
        path:
          description: >-
            The path to the target path. Uses JSON pointer notation.


            Learn more [about JSON
            Pointers](https://datatracker.ietf.org/doc/html/rfc6901#section-5).
          example: /name
          type: string
        value:
          description: >-
            The value to be used within the operations.


            Learn more [about JSON
            Pointers](https://datatracker.ietf.org/doc/html/rfc6901#section-5).
          example: foobar
      required:
        - op
        - path
      type: object
    JsonPatchDocument:
      description: A JSONPatchDocument request
      items:
        $ref: "#/components/schemas/JsonPatch"
      type: array
    JsonWebKey:
      properties:
        alg:
          description: >-
            The "alg" (algorithm) parameter identifies the algorithm intended
            for

            use with the key.  The values used should either be registered in
            the

            IANA "JSON Web Signature and Encryption Algorithms" registry

            established by [JWA] or be a value that contains a Collision-

            Resistant Name.
          example: RS256
          type: string
        crv:
          example: P-256
          type: string
        d:
          example: >-
            T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
          type: string
        dp:
          example: >-
            G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
          type: string
        dq:
          example: >-
            s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
          type: string
        e:
          example: AQAB
          type: string
        k:
          example: GawgguFyGrWKav7AX4VKUg
          type: string
        kid:
          description: >-
            The "kid" (key ID) parameter is used to match a specific key.  This

            is used, for instance, to choose among a set of keys within a JWK
            Set

            during key rollover.  The structure of the "kid" value is

            unspecified.  When "kid" values are used within a JWK Set, different

            keys within the JWK Set SHOULD use distinct "kid" values.  (One

            example in which different keys might use the same "kid" value is if

            they have different "kty" (key type) values but are considered to be

            equivalent alternatives by the application using them.)  The "kid"

            value is a case-sensitive string.
          example: 1603dfe0af8f4596
          type: string
        kty:
          description: >-
            The "kty" (key type) parameter identifies the cryptographic
            algorithm

            family used with the key, such as "RSA" or "EC". "kty" values should

            either be registered in the IANA "JSON Web Key Types" registry

            established by [JWA] or be a value that contains a Collision-

            Resistant Name.  The "kty" value is a case-sensitive string.
          example: RSA
          type: string
        "n":
          example: >-
            vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
          type: string
        p:
          example: >-
            6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
          type: string
        q:
          example: >-
            0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
          type: string
        qi:
          example: >-
            GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
          type: string
        use:
          description: >-
            Use ("public key use") identifies the intended use of

            the public key. The "use" parameter is employed to indicate whether

            a public key is used for encrypting data or verifying the signature

            on data. Values are commonly "sig" (signature) or "enc"
            (encryption).
          example: sig
          type: string
        x:
          example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
          type: string
        x5c:
          description: >-
            The "x5c" (X.509 certificate chain) parameter contains a chain of
            one

            or more PKIX certificates [RFC5280].  The certificate chain is

            represented as a JSON array of certificate value strings.  Each

            string in the array is a base64-encoded (Section 4 of [RFC4648] --

            not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.

            The PKIX certificate containing the key value MUST be the first

            certificate.
          items:
            type: string
          type: array
        "y":
          example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
          type: string
      required:
        - use
        - kty
        - kid
        - alg
      type: object
    Message:
      properties:
        body:
          type: string
        channel:
          type: string
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        dispatches:
          description: >-
            Dispatches store information about the attempts of delivering a
            message

            May contain an error if any happened, or just the `success` state.
          items:
            $ref: "#/components/schemas/MessageDispatch"
          type: array
        id:
          format: uuid
          type: string
        recipient:
          type: string
        send_count:
          format: int64
          type: integer
        status:
          $ref: "#/components/schemas/CourierMessageStatus"
        subject:
          type: string
        template_type:
          $ref: "#/components/schemas/CourierMessageTemplateType"
        type:
          $ref: "#/components/schemas/CourierMessageType"
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
      required:
        - id
        - status
        - type
        - recipient
        - body
        - subject
        - template_type
        - send_count
        - created_at
        - updated_at
      type: object
    MessageDispatch:
      description: >-
        MessageDispatch represents an attempt of sending a courier message

        It contains the status of the attempt (failed or successful) and the
        error if any occured
      properties:
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        error:
          $ref: "#/components/schemas/JSONRawMessage"
        id:
          description: The ID of this message dispatch
          format: uuid
          type: string
        message_id:
          description: The ID of the message being dispatched
          format: uuid
          type: string
        status:
          description: |-
            The status of this dispatch
            Either "failed" or "success"
            failed CourierMessageDispatchStatusFailed
            success CourierMessageDispatchStatusSuccess
          enum:
            - failed
            - success
          type: string
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
      required:
        - id
        - message_id
        - status
        - created_at
        - updated_at
      type: object
    Namespace:
      properties:
        name:
          description: Name of the namespace.
          type: string
      type: object
    PostCheckPermissionBody:
      description: Check Permission using Post Request Body
      properties:
        namespace:
          description: Namespace to query
          type: string
        object:
          description: Object to query
          type: string
        relation:
          description: Relation to query
          type: string
        subject_id:
          description: |-
            SubjectID to query

            Either SubjectSet or SubjectID can be provided.
          type: string
        subject_set:
          $ref: "#/components/schemas/SubjectSet"
      type: object
    PostCheckPermissionOrErrorBody:
      description: Post Check Permission Or Error Body
      properties:
        namespace:
          description: Namespace to query
          type: string
        object:
          description: Object to query
          type: string
        relation:
          description: Relation to query
          type: string
        subject_id:
          description: |-
            SubjectID to query

            Either SubjectSet or SubjectID can be provided.
          type: string
        subject_set:
          $ref: "#/components/schemas/SubjectSet"
      type: object
    RecoveryCodeForIdentity:
      description: Used when an administrator creates a recovery code for an identity.
      properties:
        expires_at:
          description: |-
            Expires At is the timestamp of when the recovery flow expires

            The timestamp when the recovery code expires.
          format: date-time
          type: string
        recovery_code:
          description: RecoveryCode is the code that can be used to recover the account
          type: string
        recovery_link:
          description: |-
            RecoveryLink with flow

            This link opens the recovery UI with an empty `code` field.
          type: string
      required:
        - recovery_link
        - recovery_code
      title: Recovery Code for Identity
      type: object
    RecoveryIdentityAddress:
      properties:
        created_at:
          description: CreatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        id:
          format: uuid
          type: string
        updated_at:
          description: UpdatedAt is a helper struct field for gobuffalo.pop.
          format: date-time
          type: string
        value:
          type: string
        via:
          $ref: "#/components/schemas/RecoveryAddressType"
      required:
        - id
        - value
        - via
      type: object
    RecoveryLinkForIdentity:
      description: Used when an administrator creates a recovery link for an identity.
      properties:
        expires_at:
          description: |-
            Recovery Link Expires At

            The timestamp when the recovery link expires.
          format: date-time
          type: string
        recovery_link:
          description: |-
            Recovery Link

            This link can be used to recover the account.
          type: string
      required:
        - recovery_link
      title: Identity Recovery Link
      type: object
    RejectOAuth2Request:
      properties:
        error:
          description: >-
            The error should follow the OAuth2 error format (e.g.
            `invalid_request`, `login_required`).


            Defaults to `request_denied`.
          type: string
        error_debug:
          description: >-
            Debug contains information to help resolve the problem as a
            developer. Usually not exposed

            to the public but only in the server logs.
          type: string
        error_description:
          description: Description of the error in a human readable format.
          type: string
        error_hint:
          description: Hint to help resolve the error.
          type: string
        status_code:
          description: |-
            Represents the HTTP status code of the error (e.g. 401 or 403)

            Defaults to 400
          format: int64
          type: integer
      title: The request payload used to accept a login or consent request.
      type: object
    RelationQuery:
      description: Relation Query
      properties:
        namespace:
          description: Namespace to query
          type: string
        object:
          description: Object to query
          type: string
        relation:
          description: Relation to query
          type: string
        subject_id:
          description: |-
            SubjectID to query

            Either SubjectSet or SubjectID can be provided.
          type: string
        subject_set:
          $ref: "#/components/schemas/SubjectSet"
      type: object
    Relationship:
      description: Relationship
      properties:
        namespace:
          description: Namespace of the Relation Tuple
          type: string
        object:
          description: Object of the Relation Tuple
          type: string
        relation:
          description: Relation of the Relation Tuple
          type: string
        subject_id:
          description: |-
            SubjectID of the Relation Tuple

            Either SubjectSet or SubjectID can be provided.
          type: string
        subject_set:
          $ref: "#/components/schemas/SubjectSet"
      required:
        - namespace
        - object
        - relation
      type: object
    RelationshipNamespaces:
      description: Relationship Namespace List
      properties:
        namespaces:
          items:
            $ref: "#/components/schemas/Namespace"
          type: array
      type: object
    RelationshipPatch:
      description: Payload for patching a relationship
      properties:
        action:
          enum:
            - insert
            - delete
          type: string
        relation_tuple:
          $ref: "#/components/schemas/Relationship"
      type: object
    Relationships:
      description: Paginated Relationship List
      properties:
        next_page_token:
          description: |-
            The opaque token to provide in a subsequent request
            to get the next page. It is the empty string iff this is
            the last page.
          type: string
        relation_tuples:
          items:
            $ref: "#/components/schemas/Relationship"
          type: array
      type: object
    SelfServiceFlowType:
      description: The flow type can either be `api` or `browser`.
      title: Type is the flow type.
      type: string
    Session:
      description: A Session
      properties:
        active:
          description: Active state. If false the session is no longer active.
          type: boolean
        authenticated_at:
          description: >-
            The Session Authentication Timestamp


            When this session was authenticated at. If multi-factor
            authentication was used this

            is the time when the last factor was authenticated (e.g. the TOTP
            code challenge was completed).
          format: date-time
          type: string
        authentication_methods:
          $ref: "#/components/schemas/SessionAuthenticationMethods"
        authenticator_assurance_level:
          $ref: "#/components/schemas/AuthenticatorAssuranceLevel"
        devices:
          description: Devices has history of all endpoints where the session was used
          items:
            $ref: "#/components/schemas/SessionDevice"
          type: array
        expires_at:
          description: |-
            The Session Expiry

            When this session expires at.
          format: date-time
          type: string
        id:
          description: Session ID
          format: uuid
          type: string
        identity:
          $ref: "#/components/schemas/Identity"
        issued_at:
          description: >-
            The Session Issuance Timestamp


            When this session was issued at. Usually equal or close to
            `authenticated_at`.
          format: date-time
          type: string
        tokenized:
          description: >-
            Tokenized is the tokenized (e.g. JWT) version of the session.


            It is only set when the `tokenize` query parameter was set to a
            valid tokenize template during calls to `/session/whoami`.
          type: string
      required:
        - id
      type: object
    SessionAuthenticationMethod:
      description: A singular authenticator used during authentication / login.
      properties:
        aal:
          $ref: "#/components/schemas/AuthenticatorAssuranceLevel"
        completed_at:
          description: When the authentication challenge was completed.
          format: date-time
          type: string
        method:
          enum:
            - link_recovery
            - code_recovery
            - password
            - code
            - totp
            - oidc
            - webauthn
            - lookup_secret
            - v0.6_legacy_session
          title: The method used
          type: string
        organization:
          description: The Organization id used for authentication
          type: string
        provider:
          description: OIDC or SAML provider id used for authentication
          type: string
      title: AuthenticationMethod identifies an authentication method
      type: object
    SessionAuthenticationMethods:
      description: A list of authenticators which were used to authenticate the session.
      items:
        $ref: "#/components/schemas/SessionAuthenticationMethod"
      title: List of (Used) AuthenticationMethods
      type: array
    SessionDevice:
      description: Device corresponding to a Session
      properties:
        id:
          description: Device record ID
          format: uuid
          type: string
        ip_address:
          description: IPAddress of the client
          type: string
        location:
          description: Geo Location corresponding to the IP Address
          type: string
        user_agent:
          description: UserAgent of the client
          type: string
      required:
        - id
      type: object
    SubjectSet:
      properties:
        namespace:
          description: Namespace of the Subject Set
          type: string
        object:
          description: Object of the Subject Set
          type: string
        relation:
          description: Relation of the Subject Set
          type: string
      required:
        - namespace
        - object
        - relation
      type: object
    UiNode:
      description: >-
        Nodes are represented as HTML elements or their native UI equivalents.
        For example,

        a node can be an `<img>` tag, or an `<input element>` but also `some
        plain text`.
      properties:
        attributes:
          $ref: "#/components/schemas/UiNodeAttributes"
        group:
          description: >-
            Group specifies which group (e.g. password authenticator) this node
            belongs to.

            default DefaultGroup

            password PasswordGroup

            oidc OpenIDConnectGroup

            profile ProfileGroup

            link LinkGroup

            code CodeGroup

            totp TOTPGroup

            lookup_secret LookupGroup

            webauthn WebAuthnGroup

            passkey PasskeyGroup

            identifier_first IdentifierFirstGroup

            captcha CaptchaGroup

            saml SAMLGroup
          enum:
            - default
            - password
            - oidc
            - profile
            - link
            - code
            - totp
            - lookup_secret
            - webauthn
            - passkey
            - identifier_first
            - captcha
            - saml
            - oauth2_consent
          type: string
        messages:
          $ref: "#/components/schemas/UiTexts"
        meta:
          $ref: "#/components/schemas/UiNodeMeta"
        type:
          description: |-
            The node's type
            text Text
            input Input
            img Image
            a Anchor
            script Script
            div Division
          enum:
            - text
            - input
            - img
            - a
            - script
            - div
          type: string
      required:
        - type
        - group
        - attributes
        - messages
        - meta
      title: Node represents a flow's nodes
      type: object
    UiNodeAnchorAttributes:
      properties:
        href:
          description: |-
            The link's href (destination) URL.

            format: uri
          type: string
        id:
          description: A unique identifier
          type: string
        node_type:
          description: >-
            NodeType represents this node's types. It is a mirror of `node.type`
            and

            is primarily used to allow compatibility with OpenAPI 3.0.  In this
            struct it technically always is "a".

            text Text

            input Input

            img Image

            a Anchor

            script Script

            div Division
          enum:
            - text
            - input
            - img
            - a
            - script
            - div
          type: string
        title:
          $ref: "#/components/schemas/UiText"
      required:
        - href
        - title
        - id
        - node_type
      title: AnchorAttributes represents the attributes of an anchor node.
      type: object
    UiNodeAttributes:
      discriminator:
        mapping:
          a: "#/components/schemas/UiNodeAnchorAttributes"
          div: "#/components/schemas/UiNodeDivisionAttributes"
          img: "#/components/schemas/UiNodeImageAttributes"
          input: "#/components/schemas/UiNodeInputAttributes"
          script: "#/components/schemas/UiNodeScriptAttributes"
          text: "#/components/schemas/UiNodeTextAttributes"
        propertyName: node_type
      oneOf:
        - $ref: "#/components/schemas/UiNodeInputAttributes"
        - $ref: "#/components/schemas/UiNodeTextAttributes"
        - $ref: "#/components/schemas/UiNodeImageAttributes"
        - $ref: "#/components/schemas/UiNodeAnchorAttributes"
        - $ref: "#/components/schemas/UiNodeScriptAttributes"
        - $ref: "#/components/schemas/UiNodeDivisionAttributes"
      title: >-
        Attributes represents a list of attributes (e.g. `href="foo"` for
        links).
    UiNodeDivisionAttributes:
      description: >-
        Division sections are used for interactive widgets that require a hook
        in the DOM / view.
      properties:
        class:
          description: The script MIME type
          type: string
        data:
          additionalProperties:
            type: string
          description: |-
            Data is a map of key-value pairs that are passed to the division.

            They may be used for `data-...` attributes.
          type: object
        id:
          description: A unique identifier
          type: string
        node_type:
          description: >-
            NodeType represents this node's types. It is a mirror of `node.type`
            and

            is primarily used to allow compatibility with OpenAPI 3.0. In this
            struct it technically always is "script".

            text Text

            input Input

            img Image

            a Anchor

            script Script

            div Division
          enum:
            - text
            - input
            - img
            - a
            - script
            - div
          type: string
      required:
        - id
        - node_type
      title: DivisionAttributes represent a division section.
      type: object
    UiNodeImageAttributes:
      properties:
        height:
          description: Height of the image
          format: int64
          type: integer
        id:
          description: A unique identifier
          type: string
        node_type:
          description: >-
            NodeType represents this node's types. It is a mirror of `node.type`
            and

            is primarily used to allow compatibility with OpenAPI 3.0.  In this
            struct it technically always is "img".

            text Text

            input Input

            img Image

            a Anchor

            script Script

            div Division
          enum:
            - text
            - input
            - img
            - a
            - script
            - div
          type: string
        src:
          description: |-
            The image's source URL.

            format: uri
          type: string
        width:
          description: Width of the image
          format: int64
          type: integer
      required:
        - src
        - id
        - width
        - height
        - node_type
      title: ImageAttributes represents the attributes of an image node.
      type: object
    UiNodeInputAttributes:
      description: InputAttributes represents the attributes of an input node
      properties:
        autocomplete:
          description: |-
            The autocomplete attribute for the input.
            email InputAttributeAutocompleteEmail
            tel InputAttributeAutocompleteTel
            url InputAttributeAutocompleteUrl
            current-password InputAttributeAutocompleteCurrentPassword
            new-password InputAttributeAutocompleteNewPassword
            one-time-code InputAttributeAutocompleteOneTimeCode
          enum:
            - email
            - tel
            - url
            - current-password
            - new-password
            - one-time-code
          type: string
        disabled:
          description: Sets the input's disabled field to true or false.
          type: boolean
        label:
          $ref: "#/components/schemas/UiText"
        maxlength:
          description: MaxLength may contain the input's maximum length.
          format: int64
          type: integer
        name:
          description: The input's element name.
          type: string
        node_type:
          description: >-
            NodeType represents this node's types. It is a mirror of `node.type`
            and

            is primarily used to allow compatibility with OpenAPI 3.0.  In this
            struct it technically always is "input".

            text Text

            input Input

            img Image

            a Anchor

            script Script

            div Division
          enum:
            - text
            - input
            - img
            - a
            - script
            - div
          type: string
        onclick:
          description: >-
            OnClick may contain javascript which should be executed on click.
            This is primarily

            used for WebAuthn.


            Deprecated: Using OnClick requires the use of eval() which is a
            security risk. Use OnClickTrigger instead.
          type: string
        onclickTrigger:
          description: >-
            OnClickTrigger may contain a WebAuthn trigger which should be
            executed on click.


            The trigger maps to a JavaScript function provided by Ory, which
            triggers actions such as PassKey registration or login.

            oryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration

            oryWebAuthnLogin WebAuthnTriggersWebAuthnLogin

            oryPasskeyLogin WebAuthnTriggersPasskeyLogin

            oryPasskeyLoginAutocompleteInit
            WebAuthnTriggersPasskeyLoginAutocompleteInit

            oryPasskeyRegistration WebAuthnTriggersPasskeyRegistration

            oryPasskeySettingsRegistration
            WebAuthnTriggersPasskeySettingsRegistration
          enum:
            - oryWebAuthnRegistration
            - oryWebAuthnLogin
            - oryPasskeyLogin
            - oryPasskeyLoginAutocompleteInit
            - oryPasskeyRegistration
            - oryPasskeySettingsRegistration
          type: string
        onload:
          description: >-
            OnLoad may contain javascript which should be executed on load. This
            is primarily

            used for WebAuthn.


            Deprecated: Using OnLoad requires the use of eval() which is a
            security risk. Use OnLoadTrigger instead.
          type: string
        onloadTrigger:
          description: >-
            OnLoadTrigger may contain a WebAuthn trigger which should be
            executed on load.


            The trigger maps to a JavaScript function provided by Ory, which
            triggers actions such as PassKey registration or login.

            oryWebAuthnRegistration WebAuthnTriggersWebAuthnRegistration

            oryWebAuthnLogin WebAuthnTriggersWebAuthnLogin

            oryPasskeyLogin WebAuthnTriggersPasskeyLogin

            oryPasskeyLoginAutocompleteInit
            WebAuthnTriggersPasskeyLoginAutocompleteInit

            oryPasskeyRegistration WebAuthnTriggersPasskeyRegistration

            oryPasskeySettingsRegistration
            WebAuthnTriggersPasskeySettingsRegistration
          enum:
            - oryWebAuthnRegistration
            - oryWebAuthnLogin
            - oryPasskeyLogin
            - oryPasskeyLoginAutocompleteInit
            - oryPasskeyRegistration
            - oryPasskeySettingsRegistration
          type: string
        pattern:
          description: The input's pattern.
          type: string
        required:
          description: Mark this input field as required.
          type: boolean
        type:
          description: |-
            The input's element type.
            text InputAttributeTypeText
            password InputAttributeTypePassword
            number InputAttributeTypeNumber
            checkbox InputAttributeTypeCheckbox
            hidden InputAttributeTypeHidden
            email InputAttributeTypeEmail
            tel InputAttributeTypeTel
            submit InputAttributeTypeSubmit
            button InputAttributeTypeButton
            datetime-local InputAttributeTypeDateTimeLocal
            date InputAttributeTypeDate
            url InputAttributeTypeURI
          enum:
            - text
            - password
            - number
            - checkbox
            - hidden
            - email
            - tel
            - submit
            - button
            - datetime-local
            - date
            - url
          type: string
        value:
          description: The input's value.
          nullable: true
      required:
        - name
        - type
        - disabled
        - node_type
      type: object
    UiNodeMeta:
      description: |-
        This might include a label and other information that can optionally
        be used to render UIs.
      properties:
        label:
          $ref: "#/components/schemas/UiText"
      title: A Node's Meta Information
      type: object
    UiNodeScriptAttributes:
      properties:
        async:
          description: The script async type
          type: boolean
        crossorigin:
          description: The script cross origin policy
          type: string
        id:
          description: A unique identifier
          type: string
        integrity:
          description: The script's integrity hash
          type: string
        node_type:
          description: >-
            NodeType represents this node's types. It is a mirror of `node.type`
            and

            is primarily used to allow compatibility with OpenAPI 3.0. In this
            struct it technically always is "script".

            text Text

            input Input

            img Image

            a Anchor

            script Script

            div Division
          enum:
            - text
            - input
            - img
            - a
            - script
            - div
          type: string
        nonce:
          description: >-
            Nonce for CSP


            A nonce you may want to use to improve your Content Security Policy.

            You do not have to use this value but if you want to improve your
            CSP

            policies you may use it. You can also choose to use your own nonce
            value!
          type: string
        referrerpolicy:
          description: The script referrer policy
          type: string
        src:
          description: The script source
          type: string
        type:
          description: The script MIME type
          type: string
      required:
        - src
        - async
        - referrerpolicy
        - crossorigin
        - integrity
        - type
        - id
        - nonce
        - node_type
      title: ScriptAttributes represent script nodes which load javascript.
      type: object
    UiNodeTextAttributes:
      properties:
        id:
          description: A unique identifier
          type: string
        node_type:
          description: >-
            NodeType represents this node's types. It is a mirror of `node.type`
            and

            is primarily used to allow compatibility with OpenAPI 3.0.  In this
            struct it technically always is "text".

            text Text

            input Input

            img Image

            a Anchor

            script Script

            div Division
          enum:
            - text
            - input
            - img
            - a
            - script
            - div
          type: string
        text:
          $ref: "#/components/schemas/UiText"
      required:
        - text
        - id
        - node_type
      title: TextAttributes represents the attributes of a text node.
      type: object
    UiNodes:
      items:
        $ref: "#/components/schemas/UiNode"
      type: array
    UiText:
      properties:
        context:
          description: The message's context. Useful when customizing messages.
          type: object
        id:
          $ref: "#/components/schemas/ID"
        text:
          description: The message text. Written in american english.
          type: string
        type:
          description: |-
            The message type.
            info Info
            error Error
            success Success
          enum:
            - info
            - error
            - success
          type: string
      required:
        - id
        - text
        - type
      type: object
    UiTexts:
      items:
        $ref: "#/components/schemas/UiText"
      type: array
    UpdateIdentityBody:
      description: Update Identity Body
      properties:
        credentials:
          $ref: "#/components/schemas/IdentityWithCredentials"
        metadata_admin:
          description: >-
            Store metadata about the user which is only accessible through admin
            APIs such as `GET /identities/<id>`.
        metadata_public:
          description: >-
            Store metadata about the identity which the identity itself can see
            when calling for example the

            session endpoint. Do not store sensitive information (e.g. credit
            score) about the identity in this field.
        schema_id:
          description: >-
            SchemaID is the ID of the JSON Schema to be used for validating the
            identity's traits. If set

            will update the Identity's SchemaID.
          type: string
        state:
          description: |-
            State is the identity's state.
            active StateActive
            inactive StateInactive
          enum:
            - active
            - inactive
          type: string
        traits:
          description: >-
            Traits represent an identity's traits. The identity is able to
            create, modify, and delete traits

            in a self-service manner. The input will always be validated against
            the JSON Schema defined

            in `schema_id`.
          type: object
      required:
        - schema_id
        - traits
        - state
      type: object
    UpdateLoginFlowBody:
      discriminator:
        mapping:
          code: "#/components/schemas/UpdateLoginFlowWithCodeMethod"
          identifier_first: "#/components/schemas/UpdateLoginFlowWithIdentifierFirstMethod"
          lookup_secret: "#/components/schemas/UpdateLoginFlowWithLookupSecretMethod"
          oidc: "#/components/schemas/UpdateLoginFlowWithOidcMethod"
          passkey: "#/components/schemas/UpdateLoginFlowWithPasskeyMethod"
          password: "#/components/schemas/UpdateLoginFlowWithPasswordMethod"
          saml: "#/components/schemas/UpdateLoginFlowWithSamlMethod"
          totp: "#/components/schemas/UpdateLoginFlowWithTotpMethod"
          webauthn: "#/components/schemas/UpdateLoginFlowWithWebAuthnMethod"
        propertyName: method
      oneOf:
        - $ref: "#/components/schemas/UpdateLoginFlowWithPasswordMethod"
        - $ref: "#/components/schemas/UpdateLoginFlowWithOidcMethod"
        - $ref: "#/components/schemas/UpdateLoginFlowWithSamlMethod"
        - $ref: "#/components/schemas/UpdateLoginFlowWithTotpMethod"
        - $ref: "#/components/schemas/UpdateLoginFlowWithWebAuthnMethod"
        - $ref: "#/components/schemas/UpdateLoginFlowWithLookupSecretMethod"
        - $ref: "#/components/schemas/UpdateLoginFlowWithCodeMethod"
        - $ref: "#/components/schemas/UpdateLoginFlowWithPasskeyMethod"
        - $ref: "#/components/schemas/UpdateLoginFlowWithIdentifierFirstMethod"
    UpdateLoginFlowWithCodeMethod:
      description: Update Login flow using the code method
      properties:
        address:
          description: >-
            Address is the address to send the code to, in case that there are
            multiple addresses. This field

            is only used in two-factor flows and is ineffective for passwordless
            flows.
          type: string
        code:
          description: Code is the 6 digits code sent to the user
          type: string
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        identifier:
          description: >-
            Identifier is the code identifier

            The identifier requires that the user has already completed the
            registration or settings with code flow.
          type: string
        method:
          description: >-
            Method should be set to "code" when logging in using the code
            strategy.
          type: string
        resend:
          description: Resend is set when the user wants to resend the code
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - method
        - csrf_token
      type: object
    UpdateLoginFlowWithIdentifierFirstMethod:
      description: Update Login Flow with Multi-Step Method
      properties:
        csrf_token:
          description: >-
            Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        identifier:
          description: Identifier is the email or username of the user trying to log in.
          type: string
        method:
          description: >-
            Method should be set to "password" when logging in using the
            identifier and password strategy.
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - method
        - identifier
      type: object
    UpdateLoginFlowWithLookupSecretMethod:
      description: Update Login Flow with Lookup Secret Method
      properties:
        csrf_token:
          description: >-
            Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        lookup_secret:
          description: The lookup secret.
          type: string
        method:
          description: >-
            Method should be set to "lookup_secret" when logging in using the
            lookup_secret strategy.
          type: string
      required:
        - method
        - lookup_secret
      type: object
    UpdateLoginFlowWithOidcMethod:
      description: Update Login Flow with OpenID Connect Method
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        id_token:
          description: >-
            IDToken is an optional id token provided by an OIDC provider


            If submitted, it is verified using the OIDC provider's public key
            set and the claims are used to populate

            the OIDC credentials of the identity.

            If the OIDC provider does not store additional claims (such as name,
            etc.) in the IDToken itself, you can use

            the `traits` field to populate the identity's traits. Note, that
            Apple only includes the users email in the IDToken.


            Supported providers are

            Apple

            Google
          type: string
        id_token_nonce:
          description: >-
            IDTokenNonce is the nonce, used when generating the IDToken.

            If the provider supports nonce validation, the nonce will be
            validated against this value and required.
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `oidc` when using the oidc method.
          type: string
        provider:
          description: The provider to register with
          type: string
        traits:
          description: >-
            The identity traits. This is a placeholder for the registration
            flow.
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
        upstream_parameters:
          description: >-
            UpstreamParameters are the parameters that are passed to the
            upstream identity provider.


            These parameters are optional and depend on what the upstream
            identity provider supports.

            Supported parameters are:

            `login_hint` (string): The `login_hint` parameter suppresses the
            account chooser and either pre-fills the email box on the sign-in
            form, or selects the proper session.

            `hd` (string): The `hd` parameter limits the login/registration
            process to a Google Organization, e.g. `mycollege.edu`.

            `prompt` (string): The `prompt` specifies whether the Authorization
            Server prompts the End-User for reauthentication and consent, e.g.
            `select_account`.
          type: object
      required:
        - provider
        - method
      type: object
    UpdateLoginFlowWithPasskeyMethod:
      description: Update Login Flow with Passkey Method
      properties:
        csrf_token:
          description: >-
            Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        method:
          description: >-
            Method should be set to "passkey" when logging in using the Passkey
            strategy.
          type: string
        passkey_login:
          description: |-
            Login a WebAuthn Security Key

            This must contain the ID of the WebAuthN connection.
          type: string
      required:
        - method
      type: object
    UpdateLoginFlowWithPasswordMethod:
      description: Update Login Flow with Password Method
      properties:
        csrf_token:
          description: >-
            Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        identifier:
          description: Identifier is the email or username of the user trying to log in.
          type: string
        method:
          description: >-
            Method should be set to "password" when logging in using the
            identifier and password strategy.
          type: string
        password:
          description: The user's password.
          type: string
        password_identifier:
          description: |-
            Identifier is the email or username of the user trying to log in.
            This field is deprecated!
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - method
        - password
        - identifier
      type: object
    UpdateLoginFlowWithSamlMethod:
      description: Update login flow using SAML
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `saml` when using the saml method.
          type: string
        provider:
          description: The provider to register with
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - provider
        - method
      type: object
    UpdateLoginFlowWithTotpMethod:
      description: Update Login Flow with TOTP Method
      properties:
        csrf_token:
          description: >-
            Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        method:
          description: >-
            Method should be set to "totp" when logging in using the TOTP
            strategy.
          type: string
        totp_code:
          description: The TOTP code.
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - method
        - totp_code
      type: object
    UpdateLoginFlowWithWebAuthnMethod:
      description: Update Login Flow with WebAuthn Method
      properties:
        csrf_token:
          description: >-
            Sending the anti-csrf token is only required for browser login
            flows.
          type: string
        identifier:
          description: Identifier is the email or username of the user trying to log in.
          type: string
        method:
          description: >-
            Method should be set to "webAuthn" when logging in using the
            WebAuthn strategy.
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
        webauthn_login:
          description: |-
            Login a WebAuthn Security Key

            This must contain the ID of the WebAuthN connection.
          type: string
      required:
        - identifier
        - method
      type: object
    UpdateRegistrationFlowWithCodeMethod:
      description: Update Registration Flow with Code Method
      properties:
        code:
          description: The OTP Code sent to the user
          type: string
        csrf_token:
          description: The CSRF Token
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `code` when using the code method.
          type: string
        resend:
          description: Resend restarts the flow with a new code
          type: string
        traits:
          description: The identity's traits
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - traits
        - method
      type: object
    UpdateRegistrationFlowWithOidcMethod:
      description: Update Registration Flow with OpenID Connect Method
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        id_token:
          description: >-
            IDToken is an optional id token provided by an OIDC provider


            If submitted, it is verified using the OIDC provider's public key
            set and the claims are used to populate

            the OIDC credentials of the identity.

            If the OIDC provider does not store additional claims (such as name,
            etc.) in the IDToken itself, you can use

            the `traits` field to populate the identity's traits. Note, that
            Apple only includes the users email in the IDToken.


            Supported providers are

            Apple

            Google
          type: string
        id_token_nonce:
          description: >-
            IDTokenNonce is the nonce, used when generating the IDToken.

            If the provider supports nonce validation, the nonce will be
            validated against this value and is required.
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `oidc` when using the oidc method.
          type: string
        provider:
          description: The provider to register with
          type: string
        traits:
          description: The identity traits
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
        upstream_parameters:
          description: >-
            UpstreamParameters are the parameters that are passed to the
            upstream identity provider.


            These parameters are optional and depend on what the upstream
            identity provider supports.

            Supported parameters are:

            `login_hint` (string): The `login_hint` parameter suppresses the
            account chooser and either pre-fills the email box on the sign-in
            form, or selects the proper session.

            `hd` (string): The `hd` parameter limits the login/registration
            process to a Google Organization, e.g. `mycollege.edu`.

            `prompt` (string): The `prompt` specifies whether the Authorization
            Server prompts the End-User for reauthentication and consent, e.g.
            `select_account`.
          type: object
      required:
        - provider
        - method
      type: object
    UpdateRegistrationFlowWithPasskeyMethod:
      description: Update Registration Flow with Passkey Method
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: >-
            Method


            Should be set to "passkey" when trying to add, update, or remove a
            Passkey.
          type: string
        passkey_register:
          description: >-
            Register a WebAuthn Security Key


            It is expected that the JSON returned by the WebAuthn registration
            process

            is included here.
          type: string
        traits:
          description: The identity's traits
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - traits
        - method
      type: object
    UpdateRegistrationFlowWithPasswordMethod:
      description: Update Registration Flow with Password Method
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `password` when using the password method.
          type: string
        password:
          description: Password to sign the user up with
          type: string
        traits:
          description: The identity's traits
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - password
        - traits
        - method
      type: object
    UpdateRegistrationFlowWithProfileMethod:
      description: Update Registration Flow with Profile Method
      properties:
        csrf_token:
          description: |-
            The Anti-CSRF Token

            This token is only required when performing browser flows.
          type: string
        method:
          description: |-
            Method

            Should be set to profile when trying to update a profile.
          type: string
        screen:
          description: >-
            Screen requests navigation to a previous screen.


            This must be set to credential-selection to go back to the
            credential

            selection screen.

            credential-selection RegistrationScreenCredentialSelection
            nolint:gosec // not a credential

            previous RegistrationScreenPrevious
          enum:
            - credential-selection
            - previous
          type: string
        traits:
          description: |-
            Traits

            The identity's traits.
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - traits
        - method
      type: object
    UpdateRegistrationFlowWithSamlMethod:
      description: Update registration flow using SAML
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        method:
          description: |-
            Method to use

            This field must be set to `saml` when using the saml method.
          type: string
        provider:
          description: The provider to register with
          type: string
        traits:
          description: The identity traits
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - provider
        - method
      type: object
    UpdateRegistrationFlowWithWebAuthnMethod:
      description: Update Registration Flow with WebAuthn Method
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: >-
            Method


            Should be set to "webauthn" when trying to add, update, or remove a
            webAuthn pairing.
          type: string
        traits:
          description: The identity's traits
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
        webauthn_register:
          description: >-
            Register a WebAuthn Security Key


            It is expected that the JSON returned by the WebAuthn registration
            process

            is included here.
          type: string
        webauthn_register_displayname:
          description: |-
            Name of the WebAuthn Security Key to be Added

            A human-readable name for the security key which will be added.
          type: string
      required:
        - traits
        - method
      type: object
    UpdateSettingsFlowWithLookupMethod:
      description: Update Settings Flow with Lookup Method
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        lookup_secret_confirm:
          description: If set to true will save the regenerated lookup secrets
          type: boolean
        lookup_secret_disable:
          description: Disables this method if true.
          type: boolean
        lookup_secret_regenerate:
          description: If set to true will regenerate the lookup secrets
          type: boolean
        lookup_secret_reveal:
          description: If set to true will reveal the lookup secrets
          type: boolean
        method:
          description: >-
            Method


            Should be set to "lookup" when trying to add, update, or remove a
            lookup pairing.
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - method
      type: object
    UpdateSettingsFlowWithOidcMethod:
      description: Update Settings Flow with OpenID Connect Method
      properties:
        flow:
          description: |-
            Flow ID is the flow's ID.

            in: query
          type: string
        link:
          description: |-
            Link this provider

            Either this or `unlink` must be set.

            type: string
            in: body
          type: string
        method:
          description: |-
            Method

            Should be set to profile when trying to update a profile.
          type: string
        traits:
          description: |-
            The identity's traits

            in: body
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
        unlink:
          description: |-
            Unlink this provider

            Either this or `link` must be set.

            type: string
            in: body
          type: string
        upstream_parameters:
          description: >-
            UpstreamParameters are the parameters that are passed to the
            upstream identity provider.


            These parameters are optional and depend on what the upstream
            identity provider supports.

            Supported parameters are:

            `login_hint` (string): The `login_hint` parameter suppresses the
            account chooser and either pre-fills the email box on the sign-in
            form, or selects the proper session.

            `hd` (string): The `hd` parameter limits the login/registration
            process to a Google Organization, e.g. `mycollege.edu`.

            `prompt` (string): The `prompt` specifies whether the Authorization
            Server prompts the End-User for reauthentication and consent, e.g.
            `select_account`.
          type: object
      required:
        - method
      type: object
    UpdateSettingsFlowWithPasskeyMethod:
      description: Update Settings Flow with Passkey Method
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: >-
            Method


            Should be set to "passkey" when trying to add, update, or remove a
            webAuthn pairing.
          type: string
        passkey_remove:
          description: |-
            Remove a WebAuthn Security Key

            This must contain the ID of the WebAuthN connection.
          type: string
        passkey_settings_register:
          description: >-
            Register a WebAuthn Security Key


            It is expected that the JSON returned by the WebAuthn registration
            process

            is included here.
          type: string
      required:
        - method
      type: object
    UpdateSettingsFlowWithPasswordMethod:
      description: Update Settings Flow with Password Method
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: |-
            Method

            Should be set to password when trying to update a password.
          type: string
        password:
          description: Password is the updated password
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - password
        - method
      type: object
    UpdateSettingsFlowWithProfileMethod:
      description: Update Settings Flow with Profile Method
      properties:
        csrf_token:
          description: |-
            The Anti-CSRF Token

            This token is only required when performing browser flows.
          type: string
        method:
          description: |-
            Method

            Should be set to profile when trying to update a profile.
          type: string
        traits:
          description: |-
            Traits

            The identity's traits.
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - traits
        - method
      type: object
    UpdateSettingsFlowWithSamlMethod:
      description: Update settings flow using SAML
      properties:
        csrf_token:
          description: The CSRF Token
          type: string
        flow:
          description: |-
            Flow ID is the flow's ID.

            in: query
          type: string
        link:
          description: |-
            Link this provider

            Either this or `unlink` must be set.

            type: string
            in: body
          type: string
        method:
          description: |-
            Method

            Should be set to saml when trying to update a profile.
          type: string
        traits:
          description: |-
            The identity's traits

            in: body
          type: object
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
        unlink:
          description: |-
            Unlink this provider

            Either this or `link` must be set.

            type: string
            in: body
          type: string
      required:
        - method
      type: object
    UpdateSettingsFlowWithTotpMethod:
      description: Update Settings Flow with TOTP Method
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: >-
            Method


            Should be set to "totp" when trying to add, update, or remove a totp
            pairing.
          type: string
        totp_code:
          description: ValidationTOTP must contain a valid TOTP based on the
          type: string
        totp_unlink:
          description: |-
            UnlinkTOTP if true will remove the TOTP pairing,
            effectively removing the credential. This can be used
            to set up a new TOTP device.
          type: boolean
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
      required:
        - method
      type: object
    UpdateSettingsFlowWithWebAuthnMethod:
      description: Update Settings Flow with WebAuthn Method
      properties:
        csrf_token:
          description: CSRFToken is the anti-CSRF token
          type: string
        method:
          description: >-
            Method


            Should be set to "webauthn" when trying to add, update, or remove a
            webAuthn pairing.
          type: string
        transient_payload:
          description: Transient data to pass along to any webhooks
          type: object
        webauthn_register:
          description: >-
            Register a WebAuthn Security Key


            It is expected that the JSON returned by the WebAuthn registration
            process

            is included here.
          type: string
        webauthn_register_displayname:
          description: |-
            Name of the WebAuthn Security Key to be Added

            A human-readable name for the security key which will be added.
          type: string
        webauthn_remove:
          description: |-
            Remove a WebAuthn Security Key

            This must contain the ID of the WebAuthN connection.
          type: string
      required:
        - method
      type: object
    VerifiableCredentialPrimingResponse:
      properties:
        c_nonce:
          type: string
        c_nonce_expires_in:
          format: int64
          type: integer
        error:
          type: string
        error_debug:
          type: string
        error_description:
          type: string
        error_hint:
          type: string
        format:
          type: string
        status_code:
          format: int64
          type: integer
      title: >-
        VerifiableCredentialPrimingResponse contains the nonce to include in the
        proof-of-possession JWT.
      type: object
    VerifiableCredentialResponse:
      properties:
        credential_draft_00:
          type: string
        format:
          type: string
      title: VerifiableCredentialResponse contains the verifiable credential.
      type: object
    VerifiableIdentityAddress:
      description: VerifiableAddress is an identity's verifiable address
      properties:
        created_at:
          description: When this entry was created
          example: "2014-01-01T23:28:56.782Z"
          format: date-time
          type: string
        id:
          description: The ID
          format: uuid
          type: string
        status:
          $ref: "#/components/schemas/IdentityVerifiableAddressStatus"
        updated_at:
          description: When this entry was last updated
          example: "2014-01-01T23:28:56.782Z"
          format: date-time
          type: string
        value:
          description: |-
            The address value

            example foo@user.com
          type: string
        verified:
          description: Indicates if the address has already been verified
          example: true
          type: boolean
        verified_at:
          $ref: "#/components/schemas/NullTime"
        via:
          description: The delivery method
          enum:
            - email
            - sms
          example: email
          type: string
      required:
        - value
        - verified
        - via
        - status
      type: object
    ParseError:
      properties:
        end:
          $ref: "#/components/schemas/SourcePosition"
        message:
          type: string
        start:
          $ref: "#/components/schemas/SourcePosition"
      type: object
    SourcePosition:
      properties:
        Line:
          format: int64
          type: integer
        column:
          format: int64
          type: integer
      type: object
    PatchIdentitiesBody:
      description: Patch Identities Body
      properties:
        identities:
          description: |-
            Identities holds the list of patches to apply

            required
          items:
            $ref: "#/components/schemas/IdentityPatch"
          type: array
      type: object
