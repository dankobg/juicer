x-logging: &dev-logging
  driver: "json-file"
  options:
    max-file: "5"
    max-size: "10M"
    tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

x-healthcheck: &dev-healthcheck
  interval: 5s
  timeout: 5s
  retries: 5

services:
  # ----------------------------------------------------------------------------
  juicer:
    environment:
      - ENV=development
    build:
      context: ./
      dockerfile: docker/app.dockerfile
    # command: /go/bin/dlv --api-version=2 --listen=:2345 --headless --accept-multiclient --log debug "./main.go" # UNCOMMENT WHEN DEBUGGING
    env_file:
      - .env
    volumes:
      - ./:/app
    ports:
      - "2345:2345"
    security_opt:
      - "seccomp:unconfined"
      - "apparmor:unconfined"
    cap_add:
      - SYS_PTRACE
    logging: *dev-logging
    healthcheck:
      <<: *dev-healthcheck
    develop:
      watch:
        - action: sync+restart
          path: ./
          target: /usr/src/app
          ignore:
            - "web"
            - ".vscode"
        - action: rebuild
          files:
            - ./go.mod
            - ./go.sum
    labels:
      # Rest api
      - traefik.enable=true
      - traefik.http.routers.juicer.rule=Host(`juicer-dev.xyz`) && PathPrefix(`/api`)
      - traefik.http.routers.juicer.entrypoints=websecure
      - traefik.http.routers.juicer.tls=true
      - traefik.http.routers.juicer.service=juicer@docker
      - traefik.http.services.juicer.loadbalancer.server.port=1337
      # WebSocket
      - traefik.http.routers.juicer-ws.rule=Host(`juicer-dev.xyz`) && Path(`/ws`)
      - traefik.http.routers.juicer-ws.entrypoints=websecure
      - traefik.http.routers.juicer-ws.tls=true
      - traefik.http.routers.juicer-ws.service=juicer-ws@docker
      - traefik.http.services.juicer-ws.loadbalancer.server.port=1337
      - traefik.http.services.juicer-ws.loadbalancer.sticky=true
  # ----------------------------------------------------------------------------
  redis:
    environment:
      - ENV=development
    healthcheck:
      <<: *dev-healthcheck
  # ----------------------------------------------------------------------------
  postgresql:
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-test}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-test}
      - POSTGRES_DB=${POSTGRES_DB:-juicer_test}
    healthcheck:
      <<: *dev-healthcheck
  # ----------------------------------------------------------------------------
  kratos:
    env_file:
      - .env
    command:
      [
        "serve",
        "--watch-courier",
        "--config",
        "/etc/config/kratos/kratos.yaml",
        "--dev",
      ]
    healthcheck:
      <<: *dev-healthcheck
    labels:
      - traefik.enable=true
      - traefik.http.routers.kratos.rule=Host(`juicer-dev.xyz`) && PathPrefix(`/kratos`)
      - traefik.http.routers.kratos.entrypoints=websecure
      - traefik.http.routers.kratos.tls=true
      - traefik.http.routers.kratos.service=kratos@docker
      - traefik.http.services.kratos.loadbalancer.server.port=4433
      - traefik.http.middlewares.kratos-stripprefix.stripprefix.prefixes=/kratos
      - traefik.http.middlewares.kratos-stripprefix.stripprefix.forceSlash=false
      - traefik.http.routers.kratos.middlewares=kratos-stripprefix@docker
  # --------------------------------------------------------------------------------
  kratos-migrate:
    env_file:
      - .env
  # --------------------------------------------------------------------------------
  mailpit:
    image: axllent/mailpit:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - intranet
    restart: unless-stopped
    logging: *dev-logging
    healthcheck:
      <<: *dev-healthcheck
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8025/api/v2/messages?limit=1",
        ]
    labels:
      - traefik.enable=true
      - traefik.http.routers.mailpit.rule=Host(`mail.juicer-dev.xyz`)
      - traefik.http.routers.mailpit.entrypoints=websecure
      - traefik.http.routers.mailpit.tls=true
      - traefik.http.routers.mailpit.service=mailpit@docker
      - traefik.http.services.mailpit.loadbalancer.server.port=8025
  # ----------------------------------------------------------------------------
  traefik:
    image: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - intranet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik=true"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/static.yaml:/etc/traefik/traefik.yaml:ro
      - ./traefik/dynamic.yaml:/etc/traefik/dynamic.yaml:ro
      - ./certs:/etc/certs:ro
    logging: *dev-logging
    command: --api=true --docker=true --ping=true
    healthcheck:
      <<: *dev-healthcheck
      test: ["CMD", "traefik", "healthcheck", "--ping"]
  # ----------------------------------------------------------------------------
