---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kratos
  labels:
    app.kubernetes.io/name: kratos
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos
    spec:
      initContainers:
        - name: kratos-migrate
          image: oryd/kratos:v1.2.0
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: kratos-conf
            - secretRef:
                name: kratos-secret
          volumeMounts:
            - name: kratos-config
              mountPath: /etc/config/kratos
            - name: kratos-identity-schemas
              mountPath: /etc/config/kratos/schemas
            - name: kratos-oidc-schemas
              mountPath: /etc/config/kratos/oidc
            - name: kratos-hooks
              mountPath: /etc/config/kratos/hooks
            - name: kratos-imports
              mountPath: /etc/config/kratos/imports
            - name: kratos-courier-templates
              mountPath: /etc/config/kratos/courier-templates
          command:
            - kratos
            - migrate
            - sql
            - --yes
            - --read-from-env
            - --config
            - /etc/config/kratos/kratos.yaml
      containers:
        - name: kratos
          image: oryd/kratos:v1.2.0
          imagePullPolicy: IfNotPresent
          env:
            - name: ENV
              value: production
          ports:
            - name: kratos-public
              containerPort: 4433
              protocol: TCP
            - name: kratos-admin
              containerPort: 4434
              protocol: TCP
          args:
            - serve
            - --config
            - /etc/config/kratos/kratos.yaml
          livenessProbe:
            httpGet:
              path: /admin/health/ready
              port: 4434
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /admin/health/ready
              port: 4434
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /admin/health/ready
              port: 4434
            failureThreshold: 60
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
              cpu: 200m
          volumeMounts:
            - name: kratos-config
              mountPath: /etc/config/kratos
            - name: kratos-identity-schemas
              mountPath: /etc/config/kratos/schemas
            - name: kratos-oidc-schemas
              mountPath: /etc/config/kratos/oidc
            - name: kratos-hooks
              mountPath: /etc/config/kratos/hooks
            - name: kratos-imports
              mountPath: /etc/config/kratos/imports
            - name: kratos-courier-templates
              mountPath: /etc/config/kratos/courier-templates
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 100
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: Always
      volumes:
        - name: kratos-config
          configMap:
            name: kratos-config
        - name: kratos-identity-schemas
          configMap:
            name: kratos-identity-schemas
        - name: kratos-oidc-schemas
          configMap:
            name: kratos-oidc-schemas
        - name: kratos-hooks
          configMap:
            name: kratos-hooks
        - name: kratos-imports
          configMap:
            name: kratos-imports
        - name: kratos-courier-templates
          configMap:
            name: kratos-courier-templates
      serviceAccountName: kratos
      automountServiceAccountToken: true
